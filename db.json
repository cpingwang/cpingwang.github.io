{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-5.0.1/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/HELP-US-OUT.txt","path":"libs/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/bower.json","path":"libs/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/bower.json","path":"libs/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/CONTRIBUTING.md","path":"libs/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/README.md","path":"libs/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/bower.json","path":"libs/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/jquery.lazyload.js","path":"libs/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/jquery.scrollstop.js","path":"libs/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/README.md","path":"libs/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/bower.json","path":"libs/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.min.js","path":"libs/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.ui.js","path":"libs/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.ui.min.js","path":"libs/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/LICENSE","path":"libs/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery/index.js","path":"libs/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/blank.gif","path":"libs/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_loading@2x.gif","path":"libs/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_loading.gif","path":"libs/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.js","path":"libs/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.pack.js","path":"libs/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.css","path":"libs/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/lib/fastclick.js","path":"libs/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/lib/fastclick.min.js","path":"libs/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/ua-parser-js/dist/ua-parser.min.js","path":"libs/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/ua-parser-js/dist/ua-parser.pack.js","path":"libs/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_sprite@2x.png","path":"libs/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_sprite.png","path":"libs/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_overlay.png","path":"libs/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.css.map","path":"libs/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.js","path":"libs/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"libs/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/fancybox_buttons.png","path":"libs/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-media.js","path":"libs/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"libs/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"libs/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"libs/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next-5.0.1/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1491902212133},{"_id":"themes/hexo-theme-next-5.0.1/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1491902212131},{"_id":"themes/hexo-theme-next-5.0.1/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1491902212142},{"_id":"themes/hexo-theme-next-5.0.1/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1491902212147},{"_id":"themes/hexo-theme-next-5.0.1/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1491902212150},{"_id":"themes/hexo-theme-next-5.0.1/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1491902212144},{"_id":"themes/hexo-theme-next-5.0.1/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1491902212155},{"_id":"themes/hexo-theme-next-5.0.1/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1491902212168},{"_id":"themes/hexo-theme-next-5.0.1/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1491902212477},{"_id":"themes/hexo-theme-next-5.0.1/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1491902212165},{"_id":"themes/hexo-theme-next-5.0.1/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1491902212158},{"_id":"themes/hexo-theme-next-5.0.1/_config.yml","hash":"7c44e2ffddb3d576679c4e93e94bad262c6acb22","modified":1491902212161},{"_id":"source/_posts/Larry-s-Links.md","hash":"cb4e0b52a495376ef62ed1a4d2d11aac2e5b8702","modified":1491902212073},{"_id":"source/_posts/Oracle-ASH-and-AWR.md","hash":"3438aeb04a9098d3ab9ac080045a40ad2705557c","modified":1491902212080},{"_id":"source/_posts/Execution-Plan-and-Performance-Tunning.md","hash":"e64be1c9d536d123a5c140ef6d88546a493183df","modified":1491902212044},{"_id":"source/_posts/Linux-Command.md","hash":"00ef33b52fbe17b35c0b7c265f9b0c41a04d1cce","modified":1491902212077},{"_id":"source/_posts/Hexo-with-Git.md","hash":"24ac22543376d78704efb7cf200858d22ae63b78","modified":1491902212070},{"_id":"source/_posts/Oracle-Useful-SQLs.md","hash":"53aead5e6ed4577909ea934a45a88fc4fc504edd","modified":1491902212087},{"_id":"source/_posts/Middleman安裝.md","hash":"7df69ea122898a2b9bf5534f1efbcaa365919904","modified":1509358592070},{"_id":"source/_posts/OracleServerArchitecture.md","hash":"86e9d38cd1d80ad4d910f57062f9c81e2ab9a8cb","modified":1491902212090},{"_id":"source/_posts/Oracle-Command-On-Linux.md","hash":"9fef85b031bdd7c189dd9387586ae2023c611923","modified":1491902212083},{"_id":"source/tags/index.md","hash":"3d13ec49ec94237a0d30481a757c71f970545d76","modified":1491902212128},{"_id":"source/_posts/Vagrant.md","hash":"a3eb9346057d76dcc29ac24d8fcb98de43563e05","modified":1509359898680},{"_id":"source/_posts/Redo-Undo-Commit.md","hash":"b82b61f08d120ebfe1f547a61e9c6fea22c4f52a","modified":1491902212105},{"_id":"source/_posts/Redis-Command.md","hash":"5837fcb3031201595da4a8d73f357ddc2972f9bd","modified":1491902212101},{"_id":"themes/hexo-theme-next-5.0.1/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1491902212136},{"_id":"source/_posts/SqlServer-Code-Snippets.md","hash":"262209a0d3c23e6bfa6139a1007741b5e9c2e196","modified":1491902212110},{"_id":"themes/hexo-theme-next-5.0.1/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1491902212139},{"_id":"themes/hexo-theme-next-5.0.1/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1491902212177},{"_id":"themes/hexo-theme-next-5.0.1/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1491902212180},{"_id":"source/_posts/軟體研發之道-作者推薦的歷史人物.md","hash":"3f8777d22992f327c12b762022600ba484a54622","modified":1491902212120},{"_id":"themes/hexo-theme-next-5.0.1/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1491902212173},{"_id":"themes/hexo-theme-next-5.0.1/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1491902212186},{"_id":"themes/hexo-theme-next-5.0.1/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1491902212189},{"_id":"themes/hexo-theme-next-5.0.1/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1491902212183},{"_id":"themes/hexo-theme-next-5.0.1/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1491902212192},{"_id":"themes/hexo-theme-next-5.0.1/languages/zh-Hans.yml","hash":"23b45e77c1846c9457b98c745a60a9461678c389","modified":1491902212195},{"_id":"themes/hexo-theme-next-5.0.1/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1491902212199},{"_id":"themes/hexo-theme-next-5.0.1/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1491902212171},{"_id":"themes/hexo-theme-next-5.0.1/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1491902212203},{"_id":"themes/hexo-theme-next-5.0.1/layout/_layout.swig","hash":"1138b849e1240249480849cc2b6c6d09b28207a5","modified":1491902212208},{"_id":"themes/hexo-theme-next-5.0.1/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1491902212465},{"_id":"themes/hexo-theme-next-5.0.1/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1491902212468},{"_id":"themes/hexo-theme-next-5.0.1/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1491902212484},{"_id":"themes/hexo-theme-next-5.0.1/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1491902212451},{"_id":"themes/hexo-theme-next-5.0.1/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1491902213312},{"_id":"themes/hexo-theme-next-5.0.1/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1491902212474},{"_id":"themes/hexo-theme-next-5.0.1/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1491902212471},{"_id":"themes/hexo-theme-next-5.0.1/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1491902212462},{"_id":"themes/hexo-theme-next-5.0.1/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1491902213330},{"_id":"themes/hexo-theme-next-5.0.1/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1491902213320},{"_id":"themes/hexo-theme-next-5.0.1/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212805},{"_id":"source/_posts/Middleman安裝/20171024105747.png","hash":"731532f77f6d0aff4743d5bf46d68dec9d1d8bb0","modified":1508813879914},{"_id":"source/_posts/Middleman安裝/20171024113042.png","hash":"e26a47f4a5059f3b12146f3455250c503004183b","modified":1508827582223},{"_id":"source/_posts/Middleman安裝/20171024113755.png","hash":"252fc74802d8e9fa5ab807fe9d77c3fc82ebf61f","modified":1508827590794},{"_id":"source/_posts/Middleman安裝/20171024114105.png","hash":"93752dfa9cef94c714bedd50d4696ad98f722ab6","modified":1508827600936},{"_id":"source/_posts/Oracle-Command-On-Linux/startupDB.png","hash":"d70daa5d62b96ea7c4f7ac11e246a88d86f06dd6","modified":1491902212084},{"_id":"source/_posts/Middleman安裝/20171024120320.png","hash":"ef033e342f1daa96a6701b9fae5bcc819b7f82e4","modified":1508827642953},{"_id":"source/_posts/Redo-Undo-Commit/redolog.png","hash":"274c0c671c15b93d93ee47197bd8abdeb3687d56","modified":1491902212107},{"_id":"source/_posts/SqlServer-Code-Snippets/insert.png","hash":"061ca2d0c657e2d23581655aaf96086ac1bba57e","modified":1491902212113},{"_id":"source/_posts/SqlServer-Code-Snippets/insert2.png","hash":"72ce2e4895f5d77ed019ec3002ccdb244ad25cfb","modified":1491902212114},{"_id":"source/_posts/Middleman安裝/20171024114539.png","hash":"4ce35eb2ee8b04e0a1ae91b79c8afdc2b8e2f8b9","modified":1508816751734},{"_id":"source/_posts/SqlServer-Code-Snippets/sample.png","hash":"1b47635537c9cb3cfa6cb69d6040306d26ae7ad6","modified":1491902212115},{"_id":"source/_posts/SqlServer-Code-Snippets/manager.png","hash":"f42b8560c8c72856661d6e9a2a71a28feb9ba506","modified":1491902212115},{"_id":"source/_posts/SqlServer-Code-Snippets/using.png","hash":"72951ad6f31aab3312b7fc3ba9547bbf2e734fb8","modified":1491902212117},{"_id":"themes/hexo-theme-next-5.0.1/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1491902212211},{"_id":"themes/hexo-theme-next-5.0.1/layout/_macro/sidebar.swig","hash":"9fc9f89c169439d7584197930359b758eb198a1c","modified":1491902212225},{"_id":"themes/hexo-theme-next-5.0.1/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1491902212221},{"_id":"themes/hexo-theme-next-5.0.1/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1491902212228},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1491902212231},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1491902212234},{"_id":"themes/hexo-theme-next-5.0.1/layout/_macro/post.swig","hash":"843389ec3cb4c2baa6a6a2bb916f803c89ca723b","modified":1491902212218},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/footer.swig","hash":"27669118b957e8a39d843b63dddf561c9d62b336","modified":1491902212237},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1491902212255},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/header.swig","hash":"46f8bbe51c0334c64c3a237bc0fe8ef73c6e58e1","modified":1491902212251},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1491902212313},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1491902212316},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/head.swig","hash":"0065ae49406ade2848b86bd4cd520af9d2148ece","modified":1491902212245},{"_id":"themes/hexo-theme-next-5.0.1/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1491902212495},{"_id":"themes/hexo-theme-next-5.0.1/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1491902212489},{"_id":"themes/hexo-theme-next-5.0.1/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1491902212506},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1491902212318},{"_id":"themes/hexo-theme-next-5.0.1/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1491902212805},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1491902212257},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1491902212444},{"_id":"themes/hexo-theme-next-5.0.1/source/images/avatar.gif","hash":"6e0e146f2b916e75325994cda8bf01319a9711e3","modified":1491902212807},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1491902212810},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1491902212821},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1491902212829},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1491902212826},{"_id":"themes/hexo-theme-next-5.0.1/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491902212833},{"_id":"themes/hexo-theme-next-5.0.1/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491902212833},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1491902212832},{"_id":"themes/hexo-theme-next-5.0.1/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1491902212836},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1491902212818},{"_id":"themes/hexo-theme-next-5.0.1/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1491902212839},{"_id":"themes/hexo-theme-next-5.0.1/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1491902212815},{"_id":"source/_posts/Execution-Plan-and-Performance-Tunning/3JoinTypes.png","hash":"3c845a29ce5d2384cbb2f0416dd3eb73964f753c","modified":1491902212065},{"_id":"source/_posts/Redo-Undo-Commit/RedoLogMembers.png","hash":"47abab18fdbabde420308be37290fb6814a06646","modified":1491902212107},{"_id":"source/_posts/SqlServer-Code-Snippets/addchoose.png","hash":"2ac0dd2b974cbab4cab385381503cefa3508b90e","modified":1491902212112},{"_id":"themes/hexo-theme-next-5.0.1/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1491902212840},{"_id":"source/_posts/SqlServer-Code-Snippets/snippetFile.png","hash":"c3d887a694fd61c2314ebb7882809256a26a9ccc","modified":1491902212116},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212321},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212321},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212706},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212706},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212714},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212790},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491902212801},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1491902212260},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1491902212267},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1491902212270},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1491902212273},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1491902212301},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1491902212248},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1491902212373},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1491902212327},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1491902212310},{"_id":"themes/hexo-theme-next-5.0.1/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1491902212299},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1491902212428},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/lean-analytics.swig","hash":"3bb70d8d68142ee27f3cc98c2a4339757e7af3d3","modified":1491902212403},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1491902212321},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1491902212325},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1491902212437},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1491902212418},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1491902212709},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1491902212705},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1491902212790},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1491902212713},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1491902212858},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1491902212865},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1491902212873},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1491902212885},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1491902212931},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1491902212795},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1491902213078},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1491902213081},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1491902212934},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1491902213087},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1491902213089},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1491902213014},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1491902212927},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1491902213083},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1491902213030},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1491902213184},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1491902213189},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1491902213193},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1491902213196},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1491902213211},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1491902213226},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1491902213151},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1491902213026},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1491902213253},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1491902213256},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1491902213289},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1491902213299},{"_id":"source/favicon.ico","hash":"1d6858390c64e55a1951911c48e3ac8d33893d5f","modified":1491902212125},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1491902213308},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1491902212917},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1491902212896},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1491902213019},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1491902212800},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1491902213180},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1491902212335},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1491902212342},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1491902212350},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1491902212357},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1491902212369},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1491902212337},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1491902212512},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/comments/duoshuo.swig","hash":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1491902212387},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1491902212518},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1491902212561},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1491902212639},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1491902212510},{"_id":"themes/hexo-theme-next-5.0.1/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1491902212380},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1491902212679},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1491902212689},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1491902212693},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1491902212697},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1491902212701},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1491902212718},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1491902212725},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1491902212684},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1491902212722},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1491902212729},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1491902212734},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491902212738},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1491902212753},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491902212759},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1491902212755},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1491902212758},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1491902212743},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1491902212515},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1491902212762},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1491902212766},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1491902212768},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1491902212771},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1491902212774},{"_id":"themes/hexo-theme-next-5.0.1/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1491902212902},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1491902212786},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1491902212935},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1491902212778},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1491902212936},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1491902212935},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1491902212989},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1491902213010},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1491902212782},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1491902212976},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1491902213093},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1491902213148},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1491902213044},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1491902213074},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1491902213237},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1491902213247},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1491902212939},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1491902212938},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1491902212936},{"_id":"source/_posts/OracleServerArchitecture/OracleServerArchitecture.png","hash":"3b216956070ad7704d825fb1e74b26106e1ebd03","modified":1491902212093},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1491902213100},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1491902213096},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1491902213107},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1491902213144},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1491902213123},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1491902213273},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1491902212520},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1491902212525},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1491902212530},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1491902212533},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1491902212523},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1491902212548},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1491902212545},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1491902212542},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1491902212551},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1491902212536},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1491902212555},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1491902212558},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1491902212569},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1491902212566},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1491902212574},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1491902212579},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1491902212576},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1491902212589},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1491902212595},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1491902212597},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1491902212592},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1491902212600},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1491902212614},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1491902212604},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1491902212611},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1491902212619},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1491902212608},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1491902212616},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1491902212627},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1491902212623},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1491902212633},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1491902212637},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1491902212630},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1491902212644},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1491902212651},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1491902212648},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1491902212653},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1491902212657},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1491902212667},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1491902212663},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1491902212659},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1491902212750},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1491902212747},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1491902212674},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1491902212763},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1491902212951},{"_id":"themes/hexo-theme-next-5.0.1/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1491902212671},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1491902212940},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1491902212959},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1491902212973},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1491902212943},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1491902213140},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1491902212962},{"_id":"themes/hexo-theme-next-5.0.1/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1491902213135},{"_id":"source/_posts/Vagrant/Image-VM-version.png","hash":"eb2ecb373f4e6be34555983ad417cd2ccbded071","modified":1508915308844},{"_id":"source/_posts/Vagrant/Image-VMD.png","hash":"26a2c899157a119a35a8eb3f52af43b8ab4248cd","modified":1508908257520},{"_id":"source/_posts/Vagrant/Image-VagrantCmd.png","hash":"b098a6d5c897a2416fe16dd09f7bceecdca3cd53","modified":1508916251534},{"_id":"source/_posts/Vagrant/Image-hashicorp.png","hash":"0064701db6bb854f5dc879ccea3df9fe81f3751e","modified":1508914702788},{"_id":"source/_posts/Vagrant/Image-ssh.png","hash":"2dcf68c1475fa18c49b1a4cdf81acb6b278e1928","modified":1508912839829},{"_id":"source/_posts/Vagrant/Image-VMinstall.png","hash":"f7579cc8f006d76fefb45c6cff8f5bba4e8d9ec7","modified":1508915491682},{"_id":"source/_posts/Vagrant/Image-VMversion.png","hash":"eb2ecb373f4e6be34555983ad417cd2ccbded071","modified":1508915308844},{"_id":"source/_posts/Vagrant/VMversion.png","hash":"eb2ecb373f4e6be34555983ad417cd2ccbded071","modified":1508915308844}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2016-06-07T03:05:16.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-07 11:05:16\ntype: \"tags\"\ncomments: false\n---","updated":"2017-04-11T09:16:52.128Z","path":"tags/index.html","layout":"page","_id":"cj9e0ut5e0001w4v63dmop86c","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Larry's Links","date":"2016-07-07T10:30:10.000Z","_content":"\n.NET - Access Embeded Resource | Level Up\nhttp://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/\n\nCasting (Boxing/Unboxing) is better than parsing | Level Up\nhttp://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/\n\nIdGen - Twitter Snowflake-alike ID generator for .Net | Level Up\nhttps://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/\n\nStackExchange.Redis | Level Up\nhttp://larrynung.github.io/tags/StackExchange-Redis/\n\nVagrant | Level Up\nhttp://larrynung.github.io/tags/Vagrant/\n","source":"_posts/Larry-s-Links.md","raw":"---\ntitle: Larry's Links\ndate: 2016-07-07 18:30:10\ntags:\n---\n\n.NET - Access Embeded Resource | Level Up\nhttp://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/\n\nCasting (Boxing/Unboxing) is better than parsing | Level Up\nhttp://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/\n\nIdGen - Twitter Snowflake-alike ID generator for .Net | Level Up\nhttps://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/\n\nStackExchange.Redis | Level Up\nhttp://larrynung.github.io/tags/StackExchange-Redis/\n\nVagrant | Level Up\nhttp://larrynung.github.io/tags/Vagrant/\n","slug":"Larry-s-Links","published":1,"updated":"2017-04-11T09:16:52.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut550000w4v6aw127cca","content":"<p>.NET - Access Embeded Resource | Level Up<br><a href=\"http://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/\" target=\"_blank\" rel=\"external\">http://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/</a></p>\n<p>Casting (Boxing/Unboxing) is better than parsing | Level Up<br><a href=\"http://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/\" target=\"_blank\" rel=\"external\">http://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/</a></p>\n<p>IdGen - Twitter Snowflake-alike ID generator for .Net | Level Up<br><a href=\"https://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/\" target=\"_blank\" rel=\"external\">https://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/</a></p>\n<p>StackExchange.Redis | Level Up<br><a href=\"http://larrynung.github.io/tags/StackExchange-Redis/\" target=\"_blank\" rel=\"external\">http://larrynung.github.io/tags/StackExchange-Redis/</a></p>\n<p>Vagrant | Level Up<br><a href=\"http://larrynung.github.io/tags/Vagrant/\" target=\"_blank\" rel=\"external\">http://larrynung.github.io/tags/Vagrant/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>.NET - Access Embeded Resource | Level Up<br><a href=\"http://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/\">http://larrynung.github.io/2014/04/14/dot-net-access-embeded-resource/</a></p>\n<p>Casting (Boxing/Unboxing) is better than parsing | Level Up<br><a href=\"http://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/\">http://larrynung.github.io/2015/08/23/casting-boxing-slash-unboxing-is-better-than-parsing/</a></p>\n<p>IdGen - Twitter Snowflake-alike ID generator for .Net | Level Up<br><a href=\"https://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/\">https://larrynung.github.io/2016/04/06/idgen-twitter-snowflake-alike-id-generator-for-net/</a></p>\n<p>StackExchange.Redis | Level Up<br><a href=\"http://larrynung.github.io/tags/StackExchange-Redis/\">http://larrynung.github.io/tags/StackExchange-Redis/</a></p>\n<p>Vagrant | Level Up<br><a href=\"http://larrynung.github.io/tags/Vagrant/\">http://larrynung.github.io/tags/Vagrant/</a></p>\n"},{"title":"Oracle ASH and AWR","date":"2016-06-29T03:24:17.000Z","_content":"\nASH: Active Session History --> in Memory\n---\n(每秒1個sample,依內存空間大約只暫存最近一個小時內的資料)\n\t\n\tV$ACTIVE_SESSION_HISTORY\n\t  - Displays the active session history (ASH) sampled every second.\n\tV$METRIC\n\t  - Displays metric information.\n\tV$METRICNAME\n\t  - Displays the metrics associated with each metric group.\n\tV$METRIC_HISTORY\n\t  - Displays historical metrics.\n\tV$METRICGROUP\n\t  - Displays all metrics groups.\n\t\n\t查詢過去一小時的Top SQL:\n\tSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\n    FROM V$ACTIVE_SESSION_HISTORY \n    WHERE SAMPLE_TIME >SYSDATE-1/24 \n    GROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\n    ORDER BY 6 DESC\n\t\n\t從ASH中查SQL plan:\n\tSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_CURSOR('SQL_ID'))\n\t\n\tMore info: https://oracle-base.com/articles/10g/active-session-history\n---\nAWR: Automatic Workload Repository --> in Disk\n---\n(將1/10的ASH sample從內存放到Disk)\n    \n\tDBA_HIST_ACTIVE_SESS_HISTORY\n\t  - Displays the history contents of the active session history.\n\tDBA_HIST_BASELINE\n      - Displays baseline information.\n\tDBA_HIST_DATABASE_INSTANCE\n\t  - Displays database environment information.\n\tDBA_HIST_SNAPSHOT\n\t  - Displays snapshot information.\n\tDBA_HIST_SQL_PLAN\n\t  - Displays SQL execution plans.\n\tDBA_HIST_WR_CONTROL\n\t  - Displays AWR settings.\n\t\n\t查詢過去一小時的Top SQL:\n\tSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\n    FROM DBA_HIST_ACTIVE_SESS_HISTORY \n    WHERE SAMPLE_TIME >SYSDATE-1/24 \n    GROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\n    ORDER BY 6 DESC\n\t\n\t從AWR中查SQL plan:\n\tSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_AWR('SQL_ID'))\n\t\n\tMore info: https://oracle-base.com/articles/10g/automatic-workload-repository-10g\n    \n---\nADDM: Automatic Database Diagnostic Monitor\n---\n--> 自動診斷及優化建議\n \n \n---","source":"_posts/Oracle-ASH-and-AWR.md","raw":"---\ntitle: Oracle ASH and AWR\ndate: 2016-06-29 11:24:17\ntags: DB\n---\n\nASH: Active Session History --> in Memory\n---\n(每秒1個sample,依內存空間大約只暫存最近一個小時內的資料)\n\t\n\tV$ACTIVE_SESSION_HISTORY\n\t  - Displays the active session history (ASH) sampled every second.\n\tV$METRIC\n\t  - Displays metric information.\n\tV$METRICNAME\n\t  - Displays the metrics associated with each metric group.\n\tV$METRIC_HISTORY\n\t  - Displays historical metrics.\n\tV$METRICGROUP\n\t  - Displays all metrics groups.\n\t\n\t查詢過去一小時的Top SQL:\n\tSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\n    FROM V$ACTIVE_SESSION_HISTORY \n    WHERE SAMPLE_TIME >SYSDATE-1/24 \n    GROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\n    ORDER BY 6 DESC\n\t\n\t從ASH中查SQL plan:\n\tSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_CURSOR('SQL_ID'))\n\t\n\tMore info: https://oracle-base.com/articles/10g/active-session-history\n---\nAWR: Automatic Workload Repository --> in Disk\n---\n(將1/10的ASH sample從內存放到Disk)\n    \n\tDBA_HIST_ACTIVE_SESS_HISTORY\n\t  - Displays the history contents of the active session history.\n\tDBA_HIST_BASELINE\n      - Displays baseline information.\n\tDBA_HIST_DATABASE_INSTANCE\n\t  - Displays database environment information.\n\tDBA_HIST_SNAPSHOT\n\t  - Displays snapshot information.\n\tDBA_HIST_SQL_PLAN\n\t  - Displays SQL execution plans.\n\tDBA_HIST_WR_CONTROL\n\t  - Displays AWR settings.\n\t\n\t查詢過去一小時的Top SQL:\n\tSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\n    FROM DBA_HIST_ACTIVE_SESS_HISTORY \n    WHERE SAMPLE_TIME >SYSDATE-1/24 \n    GROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\n    ORDER BY 6 DESC\n\t\n\t從AWR中查SQL plan:\n\tSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_AWR('SQL_ID'))\n\t\n\tMore info: https://oracle-base.com/articles/10g/automatic-workload-repository-10g\n    \n---\nADDM: Automatic Database Diagnostic Monitor\n---\n--> 自動診斷及優化建議\n \n \n---","slug":"Oracle-ASH-and-AWR","published":1,"updated":"2017-04-11T09:16:52.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut5g0002w4v6z6xmmiqx","content":"<h2 id=\"ASH-Active-Session-History-–-gt-in-Memory\"><a href=\"#ASH-Active-Session-History-–-gt-in-Memory\" class=\"headerlink\" title=\"ASH: Active Session History –&gt; in Memory\"></a>ASH: Active Session History –&gt; in Memory</h2><p>(每秒1個sample,依內存空間大約只暫存最近一個小時內的資料)</p>\n<pre><code>V$ACTIVE_SESSION_HISTORY\n  - Displays the active session history (ASH) sampled every second.\nV$METRIC\n  - Displays metric information.\nV$METRICNAME\n  - Displays the metrics associated with each metric group.\nV$METRIC_HISTORY\n  - Displays historical metrics.\nV$METRICGROUP\n  - Displays all metrics groups.\n\n查詢過去一小時的Top SQL:\nSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\nFROM V$ACTIVE_SESSION_HISTORY \nWHERE SAMPLE_TIME &gt;SYSDATE-1/24 \nGROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\nORDER BY 6 DESC\n\n從ASH中查SQL plan:\nSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_CURSOR(&apos;SQL_ID&apos;))\n\nMore info: https://oracle-base.com/articles/10g/active-session-history\n</code></pre><hr>\n<h2 id=\"AWR-Automatic-Workload-Repository-–-gt-in-Disk\"><a href=\"#AWR-Automatic-Workload-Repository-–-gt-in-Disk\" class=\"headerlink\" title=\"AWR: Automatic Workload Repository –&gt; in Disk\"></a>AWR: Automatic Workload Repository –&gt; in Disk</h2><p>(將1/10的ASH sample從內存放到Disk)</p>\n<pre><code>DBA_HIST_ACTIVE_SESS_HISTORY\n  - Displays the history contents of the active session history.\nDBA_HIST_BASELINE\n  - Displays baseline information.\nDBA_HIST_DATABASE_INSTANCE\n  - Displays database environment information.\nDBA_HIST_SNAPSHOT\n  - Displays snapshot information.\nDBA_HIST_SQL_PLAN\n  - Displays SQL execution plans.\nDBA_HIST_WR_CONTROL\n  - Displays AWR settings.\n\n查詢過去一小時的Top SQL:\nSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\nFROM DBA_HIST_ACTIVE_SESS_HISTORY \nWHERE SAMPLE_TIME &gt;SYSDATE-1/24 \nGROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\nORDER BY 6 DESC\n\n從AWR中查SQL plan:\nSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_AWR(&apos;SQL_ID&apos;))\n\nMore info: https://oracle-base.com/articles/10g/automatic-workload-repository-10g\n</code></pre><hr>\n<h2 id=\"ADDM-Automatic-Database-Diagnostic-Monitor\"><a href=\"#ADDM-Automatic-Database-Diagnostic-Monitor\" class=\"headerlink\" title=\"ADDM: Automatic Database Diagnostic Monitor\"></a>ADDM: Automatic Database Diagnostic Monitor</h2><p>–&gt; 自動診斷及優化建議</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ASH-Active-Session-History-–-gt-in-Memory\"><a href=\"#ASH-Active-Session-History-–-gt-in-Memory\" class=\"headerlink\" title=\"ASH: Active Session History –&gt; in Memory\"></a>ASH: Active Session History –&gt; in Memory</h2><p>(每秒1個sample,依內存空間大約只暫存最近一個小時內的資料)</p>\n<pre><code>V$ACTIVE_SESSION_HISTORY\n  - Displays the active session history (ASH) sampled every second.\nV$METRIC\n  - Displays metric information.\nV$METRICNAME\n  - Displays the metrics associated with each metric group.\nV$METRIC_HISTORY\n  - Displays historical metrics.\nV$METRICGROUP\n  - Displays all metrics groups.\n\n查詢過去一小時的Top SQL:\nSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\nFROM V$ACTIVE_SESSION_HISTORY \nWHERE SAMPLE_TIME &gt;SYSDATE-1/24 \nGROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\nORDER BY 6 DESC\n\n從ASH中查SQL plan:\nSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_CURSOR(&apos;SQL_ID&apos;))\n\nMore info: https://oracle-base.com/articles/10g/active-session-history\n</code></pre><hr>\n<h2 id=\"AWR-Automatic-Workload-Repository-–-gt-in-Disk\"><a href=\"#AWR-Automatic-Workload-Repository-–-gt-in-Disk\" class=\"headerlink\" title=\"AWR: Automatic Workload Repository –&gt; in Disk\"></a>AWR: Automatic Workload Repository –&gt; in Disk</h2><p>(將1/10的ASH sample從內存放到Disk)</p>\n<pre><code>DBA_HIST_ACTIVE_SESS_HISTORY\n  - Displays the history contents of the active session history.\nDBA_HIST_BASELINE\n  - Displays baseline information.\nDBA_HIST_DATABASE_INSTANCE\n  - Displays database environment information.\nDBA_HIST_SNAPSHOT\n  - Displays snapshot information.\nDBA_HIST_SQL_PLAN\n  - Displays SQL execution plans.\nDBA_HIST_WR_CONTROL\n  - Displays AWR settings.\n\n查詢過去一小時的Top SQL:\nSELECT SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS,COUNT(1) as SECONDS\nFROM DBA_HIST_ACTIVE_SESS_HISTORY \nWHERE SAMPLE_TIME &gt;SYSDATE-1/24 \nGROUP BY SESSION_TYPE,TOP_LEVEL_SQL_ID,SQL_ID,SQL_PLAN_HASH_VALUE,WAIT_CLASS\nORDER BY 6 DESC\n\n從AWR中查SQL plan:\nSELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_AWR(&apos;SQL_ID&apos;))\n\nMore info: https://oracle-base.com/articles/10g/automatic-workload-repository-10g\n</code></pre><hr>\n<h2 id=\"ADDM-Automatic-Database-Diagnostic-Monitor\"><a href=\"#ADDM-Automatic-Database-Diagnostic-Monitor\" class=\"headerlink\" title=\"ADDM: Automatic Database Diagnostic Monitor\"></a>ADDM: Automatic Database Diagnostic Monitor</h2><p>–&gt; 自動診斷及優化建議</p>\n<hr>\n"},{"title":"Linux Command","date":"2016-08-05T03:45:45.000Z","_content":"\n\nLinux的指令 \n---\n    核心查詢: \n    # uname -a\n  \n    套裝系統版本查詢:\n    # cat /etc/issue\n\n    查CPU資訊:\n    # cat /proc/cpuinfo\n\n    查Memory資訊:\n    # free\n    # cat /proc/meminfo\n\n---\nLinux設定Proxy\n---\n    暫時生效\n    # export http_proxy=http://username:password@\"Proxy IP\":port\n    # export ftp_proxy=http://username:passord@\"Proxy IP\":port\n    其中如果proxy server不須要帳密，就只要打http://\"Proxy IP\":port即可\n    example: export http_proxy=http://ping.wang:password@proxy.xuenn.com:3128\n  \n    永久生效\n    # vim ~/.bashrc   //將上面兩行export加入即可\n    # source ~/.bashrc\n  \n    YUM更新\n    # vim /etc/yum.conf\n    加入: proxy=http://username:passord@\"Proxy IP\":port\n\n---\n使用pscp在Windows跟Linux之間傳檔案\n---\n\n    (0)Download pscp.exe\n    http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n\n    (1)使用cmd先cd到pscp.exe所在的目錄\n\n    (2)將Windows中的檔案傳送至Linux中的某個資料夾下:\n    pscp Local_Path_FileName LinuxAccount@Linux_IP:Linux_Path\n    example: D:\\Tools>pscp \"D:\\DB Install\\Redis_install_testing\\redis320_install.tar.gz\" root@172.16.45.105:/tmp\n\n    (3)將Linux中的某個資料夾下的某檔案傳送至Windows中的某個資料夾下:\n    example: pscp root@xxx.xxx.xxx.xxx:/home/uploads/123.txt c:\\\n\n","source":"_posts/Linux-Command.md","raw":"---\ntitle: Linux Command\ndate: 2016-08-05 11:45:45\ntags:\n---\n\n\nLinux的指令 \n---\n    核心查詢: \n    # uname -a\n  \n    套裝系統版本查詢:\n    # cat /etc/issue\n\n    查CPU資訊:\n    # cat /proc/cpuinfo\n\n    查Memory資訊:\n    # free\n    # cat /proc/meminfo\n\n---\nLinux設定Proxy\n---\n    暫時生效\n    # export http_proxy=http://username:password@\"Proxy IP\":port\n    # export ftp_proxy=http://username:passord@\"Proxy IP\":port\n    其中如果proxy server不須要帳密，就只要打http://\"Proxy IP\":port即可\n    example: export http_proxy=http://ping.wang:password@proxy.xuenn.com:3128\n  \n    永久生效\n    # vim ~/.bashrc   //將上面兩行export加入即可\n    # source ~/.bashrc\n  \n    YUM更新\n    # vim /etc/yum.conf\n    加入: proxy=http://username:passord@\"Proxy IP\":port\n\n---\n使用pscp在Windows跟Linux之間傳檔案\n---\n\n    (0)Download pscp.exe\n    http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n\n    (1)使用cmd先cd到pscp.exe所在的目錄\n\n    (2)將Windows中的檔案傳送至Linux中的某個資料夾下:\n    pscp Local_Path_FileName LinuxAccount@Linux_IP:Linux_Path\n    example: D:\\Tools>pscp \"D:\\DB Install\\Redis_install_testing\\redis320_install.tar.gz\" root@172.16.45.105:/tmp\n\n    (3)將Linux中的某個資料夾下的某檔案傳送至Windows中的某個資料夾下:\n    example: pscp root@xxx.xxx.xxx.xxx:/home/uploads/123.txt c:\\\n\n","slug":"Linux-Command","published":1,"updated":"2017-04-11T09:16:52.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut5l0003w4v6ue5eklni","content":"<h2 id=\"Linux的指令\"><a href=\"#Linux的指令\" class=\"headerlink\" title=\"Linux的指令 \"></a>Linux的指令 </h2><pre><code>核心查詢: \n# uname -a\n\n套裝系統版本查詢:\n# cat /etc/issue\n\n查CPU資訊:\n# cat /proc/cpuinfo\n\n查Memory資訊:\n# free\n# cat /proc/meminfo\n</code></pre><hr>\n<h2 id=\"Linux設定Proxy\"><a href=\"#Linux設定Proxy\" class=\"headerlink\" title=\"Linux設定Proxy\"></a>Linux設定Proxy</h2><pre><code>暫時生效\n# export http_proxy=http://username:password@&quot;Proxy IP&quot;:port\n# export ftp_proxy=http://username:passord@&quot;Proxy IP&quot;:port\n其中如果proxy server不須要帳密，就只要打http://&quot;Proxy IP&quot;:port即可\nexample: export http_proxy=http://ping.wang:password@proxy.xuenn.com:3128\n\n永久生效\n# vim ~/.bashrc   //將上面兩行export加入即可\n# source ~/.bashrc\n\nYUM更新\n# vim /etc/yum.conf\n加入: proxy=http://username:passord@&quot;Proxy IP&quot;:port\n</code></pre><hr>\n<h2 id=\"使用pscp在Windows跟Linux之間傳檔案\"><a href=\"#使用pscp在Windows跟Linux之間傳檔案\" class=\"headerlink\" title=\"使用pscp在Windows跟Linux之間傳檔案\"></a>使用pscp在Windows跟Linux之間傳檔案</h2><pre><code>(0)Download pscp.exe\nhttp://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n\n(1)使用cmd先cd到pscp.exe所在的目錄\n\n(2)將Windows中的檔案傳送至Linux中的某個資料夾下:\npscp Local_Path_FileName LinuxAccount@Linux_IP:Linux_Path\nexample: D:\\Tools&gt;pscp &quot;D:\\DB Install\\Redis_install_testing\\redis320_install.tar.gz&quot; root@172.16.45.105:/tmp\n\n(3)將Linux中的某個資料夾下的某檔案傳送至Windows中的某個資料夾下:\nexample: pscp root@xxx.xxx.xxx.xxx:/home/uploads/123.txt c:\\\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Linux的指令\"><a href=\"#Linux的指令\" class=\"headerlink\" title=\"Linux的指令 \"></a>Linux的指令 </h2><pre><code>核心查詢: \n# uname -a\n\n套裝系統版本查詢:\n# cat /etc/issue\n\n查CPU資訊:\n# cat /proc/cpuinfo\n\n查Memory資訊:\n# free\n# cat /proc/meminfo\n</code></pre><hr>\n<h2 id=\"Linux設定Proxy\"><a href=\"#Linux設定Proxy\" class=\"headerlink\" title=\"Linux設定Proxy\"></a>Linux設定Proxy</h2><pre><code>暫時生效\n# export http_proxy=http://username:password@&quot;Proxy IP&quot;:port\n# export ftp_proxy=http://username:passord@&quot;Proxy IP&quot;:port\n其中如果proxy server不須要帳密，就只要打http://&quot;Proxy IP&quot;:port即可\nexample: export http_proxy=http://ping.wang:password@proxy.xuenn.com:3128\n\n永久生效\n# vim ~/.bashrc   //將上面兩行export加入即可\n# source ~/.bashrc\n\nYUM更新\n# vim /etc/yum.conf\n加入: proxy=http://username:passord@&quot;Proxy IP&quot;:port\n</code></pre><hr>\n<h2 id=\"使用pscp在Windows跟Linux之間傳檔案\"><a href=\"#使用pscp在Windows跟Linux之間傳檔案\" class=\"headerlink\" title=\"使用pscp在Windows跟Linux之間傳檔案\"></a>使用pscp在Windows跟Linux之間傳檔案</h2><pre><code>(0)Download pscp.exe\nhttp://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n\n(1)使用cmd先cd到pscp.exe所在的目錄\n\n(2)將Windows中的檔案傳送至Linux中的某個資料夾下:\npscp Local_Path_FileName LinuxAccount@Linux_IP:Linux_Path\nexample: D:\\Tools&gt;pscp &quot;D:\\DB Install\\Redis_install_testing\\redis320_install.tar.gz&quot; root@172.16.45.105:/tmp\n\n(3)將Linux中的某個資料夾下的某檔案傳送至Windows中的某個資料夾下:\nexample: pscp root@xxx.xxx.xxx.xxx:/home/uploads/123.txt c:\\\n</code></pre>"},{"title":"Hexo with Git","date":"2016-05-26T10:23:33.000Z","_content":"\nHexo的指令  (Use [Git Shell])\n---\n    產生新文章\n    > hexo new [layout] <title>\n\t> hexo new \"file title\"\n\t\n    > hexo clean\n    \n\t重新產生(有修改就要重新generate)\n    > hexo generate\n    \n    發佈文章:\n    > hexo deploy\n    \n    > hexo server\n\t執行此命令才能在本地使用http://localhost:4000/做測試:\n    \n    More info: [Hexo](https://hexo.io/zh-tw/docs/writing.html)\n\t\n---\nGit的指令\n---\n    將異動加入Git:\n    > git add .\n    \n    Commit本地並加上注解說明:\n    > git commit -a -m \"update\"\n    \n    將Source files推送到Git:\n    > git push origin hexo\n\t\n\t*使用 TravisCI 自動幫發佈 Hexo 部落格請參閱:\n\thttp://larrynung.github.io/2016/08/11/Hexo-Auto-deploy-with-Travis-CI/\n\t(git push後就會自動clean->generate->deploy)\n\tTravisCI: https://travis-ci.org/\n\t\n\t將Git上的修改更新到本地端:\n    > git pull origin hexo\n\t\n---\n重抓的步驟\n---   \n\t1> git clone [url] [folder]\n\t\n    2> CD [folder]\n\t\n\t切換到hexo的branch\n    3> git checkout hexo\n\t\n    4.PC需安裝Node.js    \n    安裝檔下載：https://nodejs.org/en/download/。\n\n    若目錄尚未安裝npm套件,需執行此命令產生node_modules的目錄\n    5> npm install\n\t\n    使用npm安裝hexo的command line interface功能\n    6> npm install hexo-cli -g\n\t\n\t\n    ex.\n    [url]= \"https://github.com/cpingwang/cpingwang.github.io.git\"\n    [folder]= \"D:\\blog\"\n\t\n    Open a [Git Shell]\n    1> git clone \"https://github.com/cpingwang/cpingwang.github.io.git\" \"D:\\blog\"\n    2> CD \"D:\\blog\"\n    3> git checkout hexo\n\t\n---\n\n在文章中放圖片: http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/\n\n---\n","source":"_posts/Hexo-with-Git.md","raw":"---\ntitle: Hexo with Git\ndate: 2016-05-26 18:23:33\ntags: Hexo\n---\n\nHexo的指令  (Use [Git Shell])\n---\n    產生新文章\n    > hexo new [layout] <title>\n\t> hexo new \"file title\"\n\t\n    > hexo clean\n    \n\t重新產生(有修改就要重新generate)\n    > hexo generate\n    \n    發佈文章:\n    > hexo deploy\n    \n    > hexo server\n\t執行此命令才能在本地使用http://localhost:4000/做測試:\n    \n    More info: [Hexo](https://hexo.io/zh-tw/docs/writing.html)\n\t\n---\nGit的指令\n---\n    將異動加入Git:\n    > git add .\n    \n    Commit本地並加上注解說明:\n    > git commit -a -m \"update\"\n    \n    將Source files推送到Git:\n    > git push origin hexo\n\t\n\t*使用 TravisCI 自動幫發佈 Hexo 部落格請參閱:\n\thttp://larrynung.github.io/2016/08/11/Hexo-Auto-deploy-with-Travis-CI/\n\t(git push後就會自動clean->generate->deploy)\n\tTravisCI: https://travis-ci.org/\n\t\n\t將Git上的修改更新到本地端:\n    > git pull origin hexo\n\t\n---\n重抓的步驟\n---   \n\t1> git clone [url] [folder]\n\t\n    2> CD [folder]\n\t\n\t切換到hexo的branch\n    3> git checkout hexo\n\t\n    4.PC需安裝Node.js    \n    安裝檔下載：https://nodejs.org/en/download/。\n\n    若目錄尚未安裝npm套件,需執行此命令產生node_modules的目錄\n    5> npm install\n\t\n    使用npm安裝hexo的command line interface功能\n    6> npm install hexo-cli -g\n\t\n\t\n    ex.\n    [url]= \"https://github.com/cpingwang/cpingwang.github.io.git\"\n    [folder]= \"D:\\blog\"\n\t\n    Open a [Git Shell]\n    1> git clone \"https://github.com/cpingwang/cpingwang.github.io.git\" \"D:\\blog\"\n    2> CD \"D:\\blog\"\n    3> git checkout hexo\n\t\n---\n\n在文章中放圖片: http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/\n\n---\n","slug":"Hexo-with-Git","published":1,"updated":"2017-04-11T09:16:52.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut5u0005w4v6qqyxqelz","content":"<h2 id=\"Hexo的指令-Use-Git-Shell\"><a href=\"#Hexo的指令-Use-Git-Shell\" class=\"headerlink\" title=\"Hexo的指令  (Use [Git Shell])\"></a>Hexo的指令  (Use [Git Shell])</h2><pre><code>產生新文章\n&gt; hexo new [layout] &lt;title&gt;\n&gt; hexo new &quot;file title&quot;\n\n&gt; hexo clean\n\n重新產生(有修改就要重新generate)\n&gt; hexo generate\n\n發佈文章:\n&gt; hexo deploy\n\n&gt; hexo server\n執行此命令才能在本地使用http://localhost:4000/做測試:\n\nMore info: [Hexo](https://hexo.io/zh-tw/docs/writing.html)\n</code></pre><hr>\n<h2 id=\"Git的指令\"><a href=\"#Git的指令\" class=\"headerlink\" title=\"Git的指令\"></a>Git的指令</h2><pre><code>將異動加入Git:\n&gt; git add .\n\nCommit本地並加上注解說明:\n&gt; git commit -a -m &quot;update&quot;\n\n將Source files推送到Git:\n&gt; git push origin hexo\n\n*使用 TravisCI 自動幫發佈 Hexo 部落格請參閱:\nhttp://larrynung.github.io/2016/08/11/Hexo-Auto-deploy-with-Travis-CI/\n(git push後就會自動clean-&gt;generate-&gt;deploy)\nTravisCI: https://travis-ci.org/\n\n將Git上的修改更新到本地端:\n&gt; git pull origin hexo\n</code></pre><hr>\n<h2 id=\"重抓的步驟\"><a href=\"#重抓的步驟\" class=\"headerlink\" title=\"重抓的步驟\"></a>重抓的步驟</h2><pre><code>1&gt; git clone [url] [folder]\n\n2&gt; CD [folder]\n\n切換到hexo的branch\n3&gt; git checkout hexo\n\n4.PC需安裝Node.js    \n安裝檔下載：https://nodejs.org/en/download/。\n\n若目錄尚未安裝npm套件,需執行此命令產生node_modules的目錄\n5&gt; npm install\n\n使用npm安裝hexo的command line interface功能\n6&gt; npm install hexo-cli -g\n\n\nex.\n[url]= &quot;https://github.com/cpingwang/cpingwang.github.io.git&quot;\n[folder]= &quot;D:\\blog&quot;\n\nOpen a [Git Shell]\n1&gt; git clone &quot;https://github.com/cpingwang/cpingwang.github.io.git&quot; &quot;D:\\blog&quot;\n2&gt; CD &quot;D:\\blog&quot;\n3&gt; git checkout hexo\n</code></pre><hr>\n<p>在文章中放圖片: <a href=\"http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/\" target=\"_blank\" rel=\"external\">http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/</a></p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Hexo的指令-Use-Git-Shell\"><a href=\"#Hexo的指令-Use-Git-Shell\" class=\"headerlink\" title=\"Hexo的指令  (Use [Git Shell])\"></a>Hexo的指令  (Use [Git Shell])</h2><pre><code>產生新文章\n&gt; hexo new [layout] &lt;title&gt;\n&gt; hexo new &quot;file title&quot;\n\n&gt; hexo clean\n\n重新產生(有修改就要重新generate)\n&gt; hexo generate\n\n發佈文章:\n&gt; hexo deploy\n\n&gt; hexo server\n執行此命令才能在本地使用http://localhost:4000/做測試:\n\nMore info: [Hexo](https://hexo.io/zh-tw/docs/writing.html)\n</code></pre><hr>\n<h2 id=\"Git的指令\"><a href=\"#Git的指令\" class=\"headerlink\" title=\"Git的指令\"></a>Git的指令</h2><pre><code>將異動加入Git:\n&gt; git add .\n\nCommit本地並加上注解說明:\n&gt; git commit -a -m &quot;update&quot;\n\n將Source files推送到Git:\n&gt; git push origin hexo\n\n*使用 TravisCI 自動幫發佈 Hexo 部落格請參閱:\nhttp://larrynung.github.io/2016/08/11/Hexo-Auto-deploy-with-Travis-CI/\n(git push後就會自動clean-&gt;generate-&gt;deploy)\nTravisCI: https://travis-ci.org/\n\n將Git上的修改更新到本地端:\n&gt; git pull origin hexo\n</code></pre><hr>\n<h2 id=\"重抓的步驟\"><a href=\"#重抓的步驟\" class=\"headerlink\" title=\"重抓的步驟\"></a>重抓的步驟</h2><pre><code>1&gt; git clone [url] [folder]\n\n2&gt; CD [folder]\n\n切換到hexo的branch\n3&gt; git checkout hexo\n\n4.PC需安裝Node.js    \n安裝檔下載：https://nodejs.org/en/download/。\n\n若目錄尚未安裝npm套件,需執行此命令產生node_modules的目錄\n5&gt; npm install\n\n使用npm安裝hexo的command line interface功能\n6&gt; npm install hexo-cli -g\n\n\nex.\n[url]= &quot;https://github.com/cpingwang/cpingwang.github.io.git&quot;\n[folder]= &quot;D:\\blog&quot;\n\nOpen a [Git Shell]\n1&gt; git clone &quot;https://github.com/cpingwang/cpingwang.github.io.git&quot; &quot;D:\\blog&quot;\n2&gt; CD &quot;D:\\blog&quot;\n3&gt; git checkout hexo\n</code></pre><hr>\n<p>在文章中放圖片: <a href=\"http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/\">http://larrynung.github.io/2016/06/29/Hexo-Post-asset-folder/</a></p>\n<hr>\n"},{"title":"Execution Plan and Performance Tunning","date":"2017-02-28T10:35:20.000Z","_content":"\nExecution Plan\n---\n    當Query傳送到資料庫執行時，Query Optimizer會對query語句進行計算，\n    多數的資料庫都是用基於成本的優化(Cost Base Optimizer -> CBO)，\n    Optimizer針對每個運算設置一個成本(CPU成本，磁盤I/O成本和內存需求)，\n    最終計算出相對比較少的成本Cost的Execution Plan後執行Query。\n---\nOptimizer(優化器)與Statistics(統計資訊)\n---\n    Optimizer會統計分析資料狀態進行計算相關成本，Statistics是一個很重要的依據。\n    統計抽樣資訊是否可以代表實際的資料非常重要。\n    (若統計抽樣資訊失真，可以考慮手動更新該資料表的統計資訊)\n    \n    注意Parameter sniffing，有以下四種解決方式：\n    1.OPTION (RECOMPILE)\n    2.OPTION (OPTIMIZE FOR (@VARIABLE=VALUE))\n    3.OPTION (OPTIMIZE FOR (@VARIABLE UNKNOWN))\n    4.Use local variables\n---\n用指令顯示Execution Plan:\n---\n\t輸出文字格式:\n\tSET SHOWPLAN_ALL ON\n    --此處放置您的T-SQL語法--\n    SET SHOWPLAN_ALL OFF\n\t\n\tSHOWPLAN_TEXT 僅輸出執行計畫，不包含預估成本\n\t\n\t輸出XML格式:\n\tSET SHOWPLAN_XML ON\n\t--此處放置您的T-SQL語法—\n\tSET SHOWPLAN_XML OFF\n---\nHow to read Execution Plan:\n---\n    圖形執行計畫輸出是從右向左讀，從上向下讀\n\t每一個運算子會顯示其處理成本佔總成本的百分比\n\t執行計畫會提出Missing Index的建議(需經過評估，不可盲目建立Index)\n    哪些執行步驟花費的成本比較高?\n    哪些執行步驟產生的數據量比較多?(每個Operation從右到左的箭頭線條的粗細代表資料傳回的多寡)\n    了解每一步執行什麼樣的動作?\n    \n    1.【Table Scan】：遍歷整個表，查找所有匹配的記錄行。\n        這個操作將會一行一行的檢查，當然，效率也是最差的。\n    2.【Index Scan】：根據索引，從表中過濾出來一部分記錄，再查找所有匹配的記錄行，\n        顯然比第一種方式的查找范圍要小，因此比【Table Scan】要快。\n    3.【Index Seek】：根據索引，定位（獲取）記錄的存放位置，然後取得記錄，\n        因此，比起前二種方式會更快。\n    4.【Clustered Index Scan】：和【Table Scan】一樣。注意：不要以為字面上有Index就認為不一樣。\n       它的意思是按聚集索引來逐行掃描每一行記錄，因為記錄就是按聚集索引來順序存放的。\n       而Table Scan是要掃描的表沒有聚集索引，因此這二個操作本質上是一樣的。\n    5.【Clustered Index Seek】：直接根據聚集索引獲取記錄，最快！\n---\n三類基本Join方式\n---\n    Nested Loop Join (嵌套循環聯結) : 適用資料量小且輸入資料表都要有正確索引的查詢\n    Merge Join (合並聯接) : 適用輸入資料量大、排序且有叢集索引或涵蓋索引\n    Hash Join (哈希聯結) : 適用輸入資料量大、無排序定義查詢\n{% asset_img 3JoinTypes.png %}\n\n---\nSARG格式\n---\n    seek:=、>、<、between、部分like(ex:'allen%')\n    Not Seek: Like '%A%'、Like '%A' year(c1)=2016、c1+15=115、In\n\n---\n執行時間分析與統計訊息作為tunning參考\n---\n    清除快取的指令(注意不可在Prod環境執行)：\n\tDBCC FREEPROCCACHE\n    DBCC DROPCLEANBUFFERS\n\n    set statistics io,time,profile on;\n\t--此處放置您的T-SQL語法--\n\tset statistics io,time,profile off;\n\n    1.掃描計數(Scan count)：為了建構輸出的最終資料集，在達到分葉層級之後朝任何方向啟動以擷取所有值的搜尋/掃描次數。\n    - 如果使用的索引是主索引鍵的唯一索引或叢集索引，而且您只要搜尋一個值，掃描計數就是0。\n      例如 WHERE Primary_Key_Column = <value>。\n    - 當您要使用在非主索引鍵資料行上定義的非唯一叢集索引來搜尋一個值時，掃描計數就是1。\n      進行這項作業是為了檢查您所搜尋的索引鍵值是否有重複的值。\n\t  例如 WHERE Clustered_Index_Key_Column = <value>。\n    - 當N是使用索引鍵找出索引鍵值之後，朝向分葉層級左側或右側啟動的不同搜尋/掃描次數時，掃描計數就是N。\n\n    2.邏輯讀取(logical reads)：從資料快取中讀取的頁數。頁數越多，就是要取得的資料量越大，也就是消耗內部資源越大，查詢也就越沒有效率。\n    - 會包含 physical reads 及 read-ahead reads\n\t- 這個值越大，就表示SQL做了越多I/O，但是又不能計算出實際進行I/O的實際數量，所以這值就只能是一個邏輯估算值。\n\n    3.實體讀取(physical reads)：執行計劃生成後，Cache中缺少的資料從磁碟中讀取的頁數(page)。\n    \n    4.讀取前讀取(read-ahead reads)：生成執行計劃過程中判斷查詢可能需要的資料而預先載入至Cache的頁數(page)。\n\n    5.LOB邏輯讀取(lob logical reads)：從資料快取中讀取的 text、ntext、image 或大數值類型 (varchar(max)、nvarchar(max)、varbinary(max)) 頁數。\n    \n    6.LOB實體讀取(lob physical reads)：從磁碟中讀取的 text、ntext、image 或大數值類型頁數。\n\n---\n查詢SqlServer當下Top CPU/IO usage的語法\n---\t\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED\n    SELECT Top 10\n\tDB_NAME(st.dbid) as DBName,\n    OBJECT_SCHEMA_NAME(st.objectid,st.dbid) as SchemaName,\n    OBJECT_NAME(st.objectid,st.dbid) as StoredProcedure,\n    qs.execution_count,\n    --qs.total_worker_time AS TT_CPU,\n    qs.total_worker_time/1000000 as TT_CPU_Sec, --Converted from microseconds\n    (qs.total_worker_time/1000000) / qs.execution_count as AVG_CPU_Sec, --Converted from microseconds\n    (qs.total_elapsed_time/1000000) as TT_elapsed_time_Sec, --Converted from microseconds\n\t(qs.total_logical_reads+qs.total_logical_writes+qs.total_physical_reads) AS TT_IO,\n\tqs.total_logical_reads,\n\tqs.total_logical_writes,\n\tqs.total_physical_reads,\n    --es.reads,\n    --es.writes,\n\tst.text,\n    qp.query_plan,\n\ter.session_id, \n    --er.request_id,\n    --er.sql_handle,\n    es.login_name,\n    es.nt_user_name,\n    es.[host_name],\n    es.[program_name]\n    FROM sys.dm_exec_requests AS er \n    LEFT JOIN sys.dm_exec_sessions AS es on er.session_id = es.session_id \n    LEFT JOIN sys.dm_exec_query_stats AS qs on sys.fn_varbintohexstr(er.sql_handle) = sys.fn_varbintohexstr(qs.sql_handle)\n    CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\n    CROSS apply sys.dm_exec_query_plan (qs.plan_handle) AS qp\n    WHERE st.dbid is not null\n    ORDER BY qs.total_worker_time / qs.execution_count DESC\n    --ORDER BY qs.total_worker_time DESC\n    --ORDER BY qs.total_logical_reads DESC\n    --ORDER BY qs.total_logical_writes DESC\n    --ORDER BY qs.total_physical_reads DESC\n    --ORDER BY qs.total_elapsed_time DESC\n    --ORDER BY qs.execution_count DESC\n","source":"_posts/Execution-Plan-and-Performance-Tunning.md","raw":"---\ntitle: Execution Plan and Performance Tunning\ndate: 2017-02-28 18:35:20\ntags: DB\n---\n\nExecution Plan\n---\n    當Query傳送到資料庫執行時，Query Optimizer會對query語句進行計算，\n    多數的資料庫都是用基於成本的優化(Cost Base Optimizer -> CBO)，\n    Optimizer針對每個運算設置一個成本(CPU成本，磁盤I/O成本和內存需求)，\n    最終計算出相對比較少的成本Cost的Execution Plan後執行Query。\n---\nOptimizer(優化器)與Statistics(統計資訊)\n---\n    Optimizer會統計分析資料狀態進行計算相關成本，Statistics是一個很重要的依據。\n    統計抽樣資訊是否可以代表實際的資料非常重要。\n    (若統計抽樣資訊失真，可以考慮手動更新該資料表的統計資訊)\n    \n    注意Parameter sniffing，有以下四種解決方式：\n    1.OPTION (RECOMPILE)\n    2.OPTION (OPTIMIZE FOR (@VARIABLE=VALUE))\n    3.OPTION (OPTIMIZE FOR (@VARIABLE UNKNOWN))\n    4.Use local variables\n---\n用指令顯示Execution Plan:\n---\n\t輸出文字格式:\n\tSET SHOWPLAN_ALL ON\n    --此處放置您的T-SQL語法--\n    SET SHOWPLAN_ALL OFF\n\t\n\tSHOWPLAN_TEXT 僅輸出執行計畫，不包含預估成本\n\t\n\t輸出XML格式:\n\tSET SHOWPLAN_XML ON\n\t--此處放置您的T-SQL語法—\n\tSET SHOWPLAN_XML OFF\n---\nHow to read Execution Plan:\n---\n    圖形執行計畫輸出是從右向左讀，從上向下讀\n\t每一個運算子會顯示其處理成本佔總成本的百分比\n\t執行計畫會提出Missing Index的建議(需經過評估，不可盲目建立Index)\n    哪些執行步驟花費的成本比較高?\n    哪些執行步驟產生的數據量比較多?(每個Operation從右到左的箭頭線條的粗細代表資料傳回的多寡)\n    了解每一步執行什麼樣的動作?\n    \n    1.【Table Scan】：遍歷整個表，查找所有匹配的記錄行。\n        這個操作將會一行一行的檢查，當然，效率也是最差的。\n    2.【Index Scan】：根據索引，從表中過濾出來一部分記錄，再查找所有匹配的記錄行，\n        顯然比第一種方式的查找范圍要小，因此比【Table Scan】要快。\n    3.【Index Seek】：根據索引，定位（獲取）記錄的存放位置，然後取得記錄，\n        因此，比起前二種方式會更快。\n    4.【Clustered Index Scan】：和【Table Scan】一樣。注意：不要以為字面上有Index就認為不一樣。\n       它的意思是按聚集索引來逐行掃描每一行記錄，因為記錄就是按聚集索引來順序存放的。\n       而Table Scan是要掃描的表沒有聚集索引，因此這二個操作本質上是一樣的。\n    5.【Clustered Index Seek】：直接根據聚集索引獲取記錄，最快！\n---\n三類基本Join方式\n---\n    Nested Loop Join (嵌套循環聯結) : 適用資料量小且輸入資料表都要有正確索引的查詢\n    Merge Join (合並聯接) : 適用輸入資料量大、排序且有叢集索引或涵蓋索引\n    Hash Join (哈希聯結) : 適用輸入資料量大、無排序定義查詢\n{% asset_img 3JoinTypes.png %}\n\n---\nSARG格式\n---\n    seek:=、>、<、between、部分like(ex:'allen%')\n    Not Seek: Like '%A%'、Like '%A' year(c1)=2016、c1+15=115、In\n\n---\n執行時間分析與統計訊息作為tunning參考\n---\n    清除快取的指令(注意不可在Prod環境執行)：\n\tDBCC FREEPROCCACHE\n    DBCC DROPCLEANBUFFERS\n\n    set statistics io,time,profile on;\n\t--此處放置您的T-SQL語法--\n\tset statistics io,time,profile off;\n\n    1.掃描計數(Scan count)：為了建構輸出的最終資料集，在達到分葉層級之後朝任何方向啟動以擷取所有值的搜尋/掃描次數。\n    - 如果使用的索引是主索引鍵的唯一索引或叢集索引，而且您只要搜尋一個值，掃描計數就是0。\n      例如 WHERE Primary_Key_Column = <value>。\n    - 當您要使用在非主索引鍵資料行上定義的非唯一叢集索引來搜尋一個值時，掃描計數就是1。\n      進行這項作業是為了檢查您所搜尋的索引鍵值是否有重複的值。\n\t  例如 WHERE Clustered_Index_Key_Column = <value>。\n    - 當N是使用索引鍵找出索引鍵值之後，朝向分葉層級左側或右側啟動的不同搜尋/掃描次數時，掃描計數就是N。\n\n    2.邏輯讀取(logical reads)：從資料快取中讀取的頁數。頁數越多，就是要取得的資料量越大，也就是消耗內部資源越大，查詢也就越沒有效率。\n    - 會包含 physical reads 及 read-ahead reads\n\t- 這個值越大，就表示SQL做了越多I/O，但是又不能計算出實際進行I/O的實際數量，所以這值就只能是一個邏輯估算值。\n\n    3.實體讀取(physical reads)：執行計劃生成後，Cache中缺少的資料從磁碟中讀取的頁數(page)。\n    \n    4.讀取前讀取(read-ahead reads)：生成執行計劃過程中判斷查詢可能需要的資料而預先載入至Cache的頁數(page)。\n\n    5.LOB邏輯讀取(lob logical reads)：從資料快取中讀取的 text、ntext、image 或大數值類型 (varchar(max)、nvarchar(max)、varbinary(max)) 頁數。\n    \n    6.LOB實體讀取(lob physical reads)：從磁碟中讀取的 text、ntext、image 或大數值類型頁數。\n\n---\n查詢SqlServer當下Top CPU/IO usage的語法\n---\t\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED\n    SELECT Top 10\n\tDB_NAME(st.dbid) as DBName,\n    OBJECT_SCHEMA_NAME(st.objectid,st.dbid) as SchemaName,\n    OBJECT_NAME(st.objectid,st.dbid) as StoredProcedure,\n    qs.execution_count,\n    --qs.total_worker_time AS TT_CPU,\n    qs.total_worker_time/1000000 as TT_CPU_Sec, --Converted from microseconds\n    (qs.total_worker_time/1000000) / qs.execution_count as AVG_CPU_Sec, --Converted from microseconds\n    (qs.total_elapsed_time/1000000) as TT_elapsed_time_Sec, --Converted from microseconds\n\t(qs.total_logical_reads+qs.total_logical_writes+qs.total_physical_reads) AS TT_IO,\n\tqs.total_logical_reads,\n\tqs.total_logical_writes,\n\tqs.total_physical_reads,\n    --es.reads,\n    --es.writes,\n\tst.text,\n    qp.query_plan,\n\ter.session_id, \n    --er.request_id,\n    --er.sql_handle,\n    es.login_name,\n    es.nt_user_name,\n    es.[host_name],\n    es.[program_name]\n    FROM sys.dm_exec_requests AS er \n    LEFT JOIN sys.dm_exec_sessions AS es on er.session_id = es.session_id \n    LEFT JOIN sys.dm_exec_query_stats AS qs on sys.fn_varbintohexstr(er.sql_handle) = sys.fn_varbintohexstr(qs.sql_handle)\n    CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\n    CROSS apply sys.dm_exec_query_plan (qs.plan_handle) AS qp\n    WHERE st.dbid is not null\n    ORDER BY qs.total_worker_time / qs.execution_count DESC\n    --ORDER BY qs.total_worker_time DESC\n    --ORDER BY qs.total_logical_reads DESC\n    --ORDER BY qs.total_logical_writes DESC\n    --ORDER BY qs.total_physical_reads DESC\n    --ORDER BY qs.total_elapsed_time DESC\n    --ORDER BY qs.execution_count DESC\n","slug":"Execution-Plan-and-Performance-Tunning","published":1,"updated":"2017-04-11T09:16:52.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut5w0006w4v6un9tab39","content":"<h2 id=\"Execution-Plan\"><a href=\"#Execution-Plan\" class=\"headerlink\" title=\"Execution Plan\"></a>Execution Plan</h2><pre><code>當Query傳送到資料庫執行時，Query Optimizer會對query語句進行計算，\n多數的資料庫都是用基於成本的優化(Cost Base Optimizer -&gt; CBO)，\nOptimizer針對每個運算設置一個成本(CPU成本，磁盤I/O成本和內存需求)，\n最終計算出相對比較少的成本Cost的Execution Plan後執行Query。\n</code></pre><hr>\n<h2 id=\"Optimizer-優化器-與Statistics-統計資訊\"><a href=\"#Optimizer-優化器-與Statistics-統計資訊\" class=\"headerlink\" title=\"Optimizer(優化器)與Statistics(統計資訊)\"></a>Optimizer(優化器)與Statistics(統計資訊)</h2><pre><code>Optimizer會統計分析資料狀態進行計算相關成本，Statistics是一個很重要的依據。\n統計抽樣資訊是否可以代表實際的資料非常重要。\n(若統計抽樣資訊失真，可以考慮手動更新該資料表的統計資訊)\n\n注意Parameter sniffing，有以下四種解決方式：\n1.OPTION (RECOMPILE)\n2.OPTION (OPTIMIZE FOR (@VARIABLE=VALUE))\n3.OPTION (OPTIMIZE FOR (@VARIABLE UNKNOWN))\n4.Use local variables\n</code></pre><hr>\n<h2 id=\"用指令顯示Execution-Plan\"><a href=\"#用指令顯示Execution-Plan\" class=\"headerlink\" title=\"用指令顯示Execution Plan:\"></a>用指令顯示Execution Plan:</h2><pre><code>輸出文字格式:\nSET SHOWPLAN_ALL ON\n--此處放置您的T-SQL語法--\nSET SHOWPLAN_ALL OFF\n\nSHOWPLAN_TEXT 僅輸出執行計畫，不包含預估成本\n\n輸出XML格式:\nSET SHOWPLAN_XML ON\n--此處放置您的T-SQL語法—\nSET SHOWPLAN_XML OFF\n</code></pre><hr>\n<h2 id=\"How-to-read-Execution-Plan\"><a href=\"#How-to-read-Execution-Plan\" class=\"headerlink\" title=\"How to read Execution Plan:\"></a>How to read Execution Plan:</h2><pre><code>圖形執行計畫輸出是從右向左讀，從上向下讀\n每一個運算子會顯示其處理成本佔總成本的百分比\n執行計畫會提出Missing Index的建議(需經過評估，不可盲目建立Index)\n哪些執行步驟花費的成本比較高?\n哪些執行步驟產生的數據量比較多?(每個Operation從右到左的箭頭線條的粗細代表資料傳回的多寡)\n了解每一步執行什麼樣的動作?\n\n1.【Table Scan】：遍歷整個表，查找所有匹配的記錄行。\n    這個操作將會一行一行的檢查，當然，效率也是最差的。\n2.【Index Scan】：根據索引，從表中過濾出來一部分記錄，再查找所有匹配的記錄行，\n    顯然比第一種方式的查找范圍要小，因此比【Table Scan】要快。\n3.【Index Seek】：根據索引，定位（獲取）記錄的存放位置，然後取得記錄，\n    因此，比起前二種方式會更快。\n4.【Clustered Index Scan】：和【Table Scan】一樣。注意：不要以為字面上有Index就認為不一樣。\n   它的意思是按聚集索引來逐行掃描每一行記錄，因為記錄就是按聚集索引來順序存放的。\n   而Table Scan是要掃描的表沒有聚集索引，因此這二個操作本質上是一樣的。\n5.【Clustered Index Seek】：直接根據聚集索引獲取記錄，最快！\n</code></pre><hr>\n<h2 id=\"三類基本Join方式\"><a href=\"#三類基本Join方式\" class=\"headerlink\" title=\"三類基本Join方式\"></a>三類基本Join方式</h2><pre><code>Nested Loop Join (嵌套循環聯結) : 適用資料量小且輸入資料表都要有正確索引的查詢\nMerge Join (合並聯接) : 適用輸入資料量大、排序且有叢集索引或涵蓋索引\nHash Join (哈希聯結) : 適用輸入資料量大、無排序定義查詢\n</code></pre><img src=\"/2017/02/28/Execution-Plan-and-Performance-Tunning/3JoinTypes.png\" alt=\"3JoinTypes.png\" title=\"\">\n<hr>\n<h2 id=\"SARG格式\"><a href=\"#SARG格式\" class=\"headerlink\" title=\"SARG格式\"></a>SARG格式</h2><pre><code>seek:=、&gt;、&lt;、between、部分like(ex:&apos;allen%&apos;)\nNot Seek: Like &apos;%A%&apos;、Like &apos;%A&apos; year(c1)=2016、c1+15=115、In\n</code></pre><hr>\n<h2 id=\"執行時間分析與統計訊息作為tunning參考\"><a href=\"#執行時間分析與統計訊息作為tunning參考\" class=\"headerlink\" title=\"執行時間分析與統計訊息作為tunning參考\"></a>執行時間分析與統計訊息作為tunning參考</h2><pre><code>清除快取的指令(注意不可在Prod環境執行)：\nDBCC FREEPROCCACHE\nDBCC DROPCLEANBUFFERS\n\nset statistics io,time,profile on;\n--此處放置您的T-SQL語法--\nset statistics io,time,profile off;\n\n1.掃描計數(Scan count)：為了建構輸出的最終資料集，在達到分葉層級之後朝任何方向啟動以擷取所有值的搜尋/掃描次數。\n- 如果使用的索引是主索引鍵的唯一索引或叢集索引，而且您只要搜尋一個值，掃描計數就是0。\n  例如 WHERE Primary_Key_Column = &lt;value&gt;。\n- 當您要使用在非主索引鍵資料行上定義的非唯一叢集索引來搜尋一個值時，掃描計數就是1。\n  進行這項作業是為了檢查您所搜尋的索引鍵值是否有重複的值。\n  例如 WHERE Clustered_Index_Key_Column = &lt;value&gt;。\n- 當N是使用索引鍵找出索引鍵值之後，朝向分葉層級左側或右側啟動的不同搜尋/掃描次數時，掃描計數就是N。\n\n2.邏輯讀取(logical reads)：從資料快取中讀取的頁數。頁數越多，就是要取得的資料量越大，也就是消耗內部資源越大，查詢也就越沒有效率。\n- 會包含 physical reads 及 read-ahead reads\n- 這個值越大，就表示SQL做了越多I/O，但是又不能計算出實際進行I/O的實際數量，所以這值就只能是一個邏輯估算值。\n\n3.實體讀取(physical reads)：執行計劃生成後，Cache中缺少的資料從磁碟中讀取的頁數(page)。\n\n4.讀取前讀取(read-ahead reads)：生成執行計劃過程中判斷查詢可能需要的資料而預先載入至Cache的頁數(page)。\n\n5.LOB邏輯讀取(lob logical reads)：從資料快取中讀取的 text、ntext、image 或大數值類型 (varchar(max)、nvarchar(max)、varbinary(max)) 頁數。\n\n6.LOB實體讀取(lob physical reads)：從磁碟中讀取的 text、ntext、image 或大數值類型頁數。\n</code></pre><hr>\n<h2 id=\"查詢SqlServer當下Top-CPU-IO-usage的語法\"><a href=\"#查詢SqlServer當下Top-CPU-IO-usage的語法\" class=\"headerlink\" title=\"查詢SqlServer當下Top CPU/IO usage的語法\"></a>查詢SqlServer當下Top CPU/IO usage的語法</h2><pre><code>SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED\nSELECT Top 10\nDB_NAME(st.dbid) as DBName,\nOBJECT_SCHEMA_NAME(st.objectid,st.dbid) as SchemaName,\nOBJECT_NAME(st.objectid,st.dbid) as StoredProcedure,\nqs.execution_count,\n--qs.total_worker_time AS TT_CPU,\nqs.total_worker_time/1000000 as TT_CPU_Sec, --Converted from microseconds\n(qs.total_worker_time/1000000) / qs.execution_count as AVG_CPU_Sec, --Converted from microseconds\n(qs.total_elapsed_time/1000000) as TT_elapsed_time_Sec, --Converted from microseconds\n(qs.total_logical_reads+qs.total_logical_writes+qs.total_physical_reads) AS TT_IO,\nqs.total_logical_reads,\nqs.total_logical_writes,\nqs.total_physical_reads,\n--es.reads,\n--es.writes,\nst.text,\nqp.query_plan,\ner.session_id, \n--er.request_id,\n--er.sql_handle,\nes.login_name,\nes.nt_user_name,\nes.[host_name],\nes.[program_name]\nFROM sys.dm_exec_requests AS er \nLEFT JOIN sys.dm_exec_sessions AS es on er.session_id = es.session_id \nLEFT JOIN sys.dm_exec_query_stats AS qs on sys.fn_varbintohexstr(er.sql_handle) = sys.fn_varbintohexstr(qs.sql_handle)\nCROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\nCROSS apply sys.dm_exec_query_plan (qs.plan_handle) AS qp\nWHERE st.dbid is not null\nORDER BY qs.total_worker_time / qs.execution_count DESC\n--ORDER BY qs.total_worker_time DESC\n--ORDER BY qs.total_logical_reads DESC\n--ORDER BY qs.total_logical_writes DESC\n--ORDER BY qs.total_physical_reads DESC\n--ORDER BY qs.total_elapsed_time DESC\n--ORDER BY qs.execution_count DESC\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Execution-Plan\"><a href=\"#Execution-Plan\" class=\"headerlink\" title=\"Execution Plan\"></a>Execution Plan</h2><pre><code>當Query傳送到資料庫執行時，Query Optimizer會對query語句進行計算，\n多數的資料庫都是用基於成本的優化(Cost Base Optimizer -&gt; CBO)，\nOptimizer針對每個運算設置一個成本(CPU成本，磁盤I/O成本和內存需求)，\n最終計算出相對比較少的成本Cost的Execution Plan後執行Query。\n</code></pre><hr>\n<h2 id=\"Optimizer-優化器-與Statistics-統計資訊\"><a href=\"#Optimizer-優化器-與Statistics-統計資訊\" class=\"headerlink\" title=\"Optimizer(優化器)與Statistics(統計資訊)\"></a>Optimizer(優化器)與Statistics(統計資訊)</h2><pre><code>Optimizer會統計分析資料狀態進行計算相關成本，Statistics是一個很重要的依據。\n統計抽樣資訊是否可以代表實際的資料非常重要。\n(若統計抽樣資訊失真，可以考慮手動更新該資料表的統計資訊)\n\n注意Parameter sniffing，有以下四種解決方式：\n1.OPTION (RECOMPILE)\n2.OPTION (OPTIMIZE FOR (@VARIABLE=VALUE))\n3.OPTION (OPTIMIZE FOR (@VARIABLE UNKNOWN))\n4.Use local variables\n</code></pre><hr>\n<h2 id=\"用指令顯示Execution-Plan\"><a href=\"#用指令顯示Execution-Plan\" class=\"headerlink\" title=\"用指令顯示Execution Plan:\"></a>用指令顯示Execution Plan:</h2><pre><code>輸出文字格式:\nSET SHOWPLAN_ALL ON\n--此處放置您的T-SQL語法--\nSET SHOWPLAN_ALL OFF\n\nSHOWPLAN_TEXT 僅輸出執行計畫，不包含預估成本\n\n輸出XML格式:\nSET SHOWPLAN_XML ON\n--此處放置您的T-SQL語法—\nSET SHOWPLAN_XML OFF\n</code></pre><hr>\n<h2 id=\"How-to-read-Execution-Plan\"><a href=\"#How-to-read-Execution-Plan\" class=\"headerlink\" title=\"How to read Execution Plan:\"></a>How to read Execution Plan:</h2><pre><code>圖形執行計畫輸出是從右向左讀，從上向下讀\n每一個運算子會顯示其處理成本佔總成本的百分比\n執行計畫會提出Missing Index的建議(需經過評估，不可盲目建立Index)\n哪些執行步驟花費的成本比較高?\n哪些執行步驟產生的數據量比較多?(每個Operation從右到左的箭頭線條的粗細代表資料傳回的多寡)\n了解每一步執行什麼樣的動作?\n\n1.【Table Scan】：遍歷整個表，查找所有匹配的記錄行。\n    這個操作將會一行一行的檢查，當然，效率也是最差的。\n2.【Index Scan】：根據索引，從表中過濾出來一部分記錄，再查找所有匹配的記錄行，\n    顯然比第一種方式的查找范圍要小，因此比【Table Scan】要快。\n3.【Index Seek】：根據索引，定位（獲取）記錄的存放位置，然後取得記錄，\n    因此，比起前二種方式會更快。\n4.【Clustered Index Scan】：和【Table Scan】一樣。注意：不要以為字面上有Index就認為不一樣。\n   它的意思是按聚集索引來逐行掃描每一行記錄，因為記錄就是按聚集索引來順序存放的。\n   而Table Scan是要掃描的表沒有聚集索引，因此這二個操作本質上是一樣的。\n5.【Clustered Index Seek】：直接根據聚集索引獲取記錄，最快！\n</code></pre><hr>\n<h2 id=\"三類基本Join方式\"><a href=\"#三類基本Join方式\" class=\"headerlink\" title=\"三類基本Join方式\"></a>三類基本Join方式</h2><pre><code>Nested Loop Join (嵌套循環聯結) : 適用資料量小且輸入資料表都要有正確索引的查詢\nMerge Join (合並聯接) : 適用輸入資料量大、排序且有叢集索引或涵蓋索引\nHash Join (哈希聯結) : 適用輸入資料量大、無排序定義查詢\n</code></pre><img src=\"/2017/02/28/Execution-Plan-and-Performance-Tunning/3JoinTypes.png\" alt=\"3JoinTypes.png\" title=\"\">\n<hr>\n<h2 id=\"SARG格式\"><a href=\"#SARG格式\" class=\"headerlink\" title=\"SARG格式\"></a>SARG格式</h2><pre><code>seek:=、&gt;、&lt;、between、部分like(ex:&apos;allen%&apos;)\nNot Seek: Like &apos;%A%&apos;、Like &apos;%A&apos; year(c1)=2016、c1+15=115、In\n</code></pre><hr>\n<h2 id=\"執行時間分析與統計訊息作為tunning參考\"><a href=\"#執行時間分析與統計訊息作為tunning參考\" class=\"headerlink\" title=\"執行時間分析與統計訊息作為tunning參考\"></a>執行時間分析與統計訊息作為tunning參考</h2><pre><code>清除快取的指令(注意不可在Prod環境執行)：\nDBCC FREEPROCCACHE\nDBCC DROPCLEANBUFFERS\n\nset statistics io,time,profile on;\n--此處放置您的T-SQL語法--\nset statistics io,time,profile off;\n\n1.掃描計數(Scan count)：為了建構輸出的最終資料集，在達到分葉層級之後朝任何方向啟動以擷取所有值的搜尋/掃描次數。\n- 如果使用的索引是主索引鍵的唯一索引或叢集索引，而且您只要搜尋一個值，掃描計數就是0。\n  例如 WHERE Primary_Key_Column = &lt;value&gt;。\n- 當您要使用在非主索引鍵資料行上定義的非唯一叢集索引來搜尋一個值時，掃描計數就是1。\n  進行這項作業是為了檢查您所搜尋的索引鍵值是否有重複的值。\n  例如 WHERE Clustered_Index_Key_Column = &lt;value&gt;。\n- 當N是使用索引鍵找出索引鍵值之後，朝向分葉層級左側或右側啟動的不同搜尋/掃描次數時，掃描計數就是N。\n\n2.邏輯讀取(logical reads)：從資料快取中讀取的頁數。頁數越多，就是要取得的資料量越大，也就是消耗內部資源越大，查詢也就越沒有效率。\n- 會包含 physical reads 及 read-ahead reads\n- 這個值越大，就表示SQL做了越多I/O，但是又不能計算出實際進行I/O的實際數量，所以這值就只能是一個邏輯估算值。\n\n3.實體讀取(physical reads)：執行計劃生成後，Cache中缺少的資料從磁碟中讀取的頁數(page)。\n\n4.讀取前讀取(read-ahead reads)：生成執行計劃過程中判斷查詢可能需要的資料而預先載入至Cache的頁數(page)。\n\n5.LOB邏輯讀取(lob logical reads)：從資料快取中讀取的 text、ntext、image 或大數值類型 (varchar(max)、nvarchar(max)、varbinary(max)) 頁數。\n\n6.LOB實體讀取(lob physical reads)：從磁碟中讀取的 text、ntext、image 或大數值類型頁數。\n</code></pre><hr>\n<h2 id=\"查詢SqlServer當下Top-CPU-IO-usage的語法\"><a href=\"#查詢SqlServer當下Top-CPU-IO-usage的語法\" class=\"headerlink\" title=\"查詢SqlServer當下Top CPU/IO usage的語法\"></a>查詢SqlServer當下Top CPU/IO usage的語法</h2><pre><code>SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED\nSELECT Top 10\nDB_NAME(st.dbid) as DBName,\nOBJECT_SCHEMA_NAME(st.objectid,st.dbid) as SchemaName,\nOBJECT_NAME(st.objectid,st.dbid) as StoredProcedure,\nqs.execution_count,\n--qs.total_worker_time AS TT_CPU,\nqs.total_worker_time/1000000 as TT_CPU_Sec, --Converted from microseconds\n(qs.total_worker_time/1000000) / qs.execution_count as AVG_CPU_Sec, --Converted from microseconds\n(qs.total_elapsed_time/1000000) as TT_elapsed_time_Sec, --Converted from microseconds\n(qs.total_logical_reads+qs.total_logical_writes+qs.total_physical_reads) AS TT_IO,\nqs.total_logical_reads,\nqs.total_logical_writes,\nqs.total_physical_reads,\n--es.reads,\n--es.writes,\nst.text,\nqp.query_plan,\ner.session_id, \n--er.request_id,\n--er.sql_handle,\nes.login_name,\nes.nt_user_name,\nes.[host_name],\nes.[program_name]\nFROM sys.dm_exec_requests AS er \nLEFT JOIN sys.dm_exec_sessions AS es on er.session_id = es.session_id \nLEFT JOIN sys.dm_exec_query_stats AS qs on sys.fn_varbintohexstr(er.sql_handle) = sys.fn_varbintohexstr(qs.sql_handle)\nCROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\nCROSS apply sys.dm_exec_query_plan (qs.plan_handle) AS qp\nWHERE st.dbid is not null\nORDER BY qs.total_worker_time / qs.execution_count DESC\n--ORDER BY qs.total_worker_time DESC\n--ORDER BY qs.total_logical_reads DESC\n--ORDER BY qs.total_logical_writes DESC\n--ORDER BY qs.total_physical_reads DESC\n--ORDER BY qs.total_elapsed_time DESC\n--ORDER BY qs.execution_count DESC\n</code></pre>"},{"title":"Middleman安裝","date":"2017-10-24T02:43:04.000Z","_content":"\n\n    1.下載Ruby安裝檔\n    https://rubyinstaller.org/downloads/\n{% asset_img 20171024105747.png %}\n\n\n    2.安裝MSYS2\n    \n{% asset_img 20171024113042.png %} \n    \n{% asset_img 20171024113755.png %}\n\n{% asset_img 20171024114105.png %}\n\n{% asset_img 20171024114539.png %}\n\n---\nOpen cmd window...\n\n    3.檢查Ruby版本\n    > ruby --version\n\t\n\t4.安裝Middleman\n    > gem install middleman\n\n\t5.檢查Middleman\n    > middleman version\n\n---\n    6.使用Middleman開啟測試專案\n    > mmiddleman init testproject\n\t\n    7.啟動測試專案\n    > mmiddleman server\n\n{% asset_img 20171024120320.png %}\n\n\n---\n    More info:\nhttps://middlemanapp.com/","source":"_posts/Middleman安裝.md","raw":"---\ntitle: Middleman安裝\ndate: 2017-10-24 10:43:04\ntags:\n---\n\n\n    1.下載Ruby安裝檔\n    https://rubyinstaller.org/downloads/\n{% asset_img 20171024105747.png %}\n\n\n    2.安裝MSYS2\n    \n{% asset_img 20171024113042.png %} \n    \n{% asset_img 20171024113755.png %}\n\n{% asset_img 20171024114105.png %}\n\n{% asset_img 20171024114539.png %}\n\n---\nOpen cmd window...\n\n    3.檢查Ruby版本\n    > ruby --version\n\t\n\t4.安裝Middleman\n    > gem install middleman\n\n\t5.檢查Middleman\n    > middleman version\n\n---\n    6.使用Middleman開啟測試專案\n    > mmiddleman init testproject\n\t\n    7.啟動測試專案\n    > mmiddleman server\n\n{% asset_img 20171024120320.png %}\n\n\n---\n    More info:\nhttps://middlemanapp.com/","slug":"Middleman安裝","published":1,"updated":"2017-10-30T10:40:36.753Z","_id":"cj9e0ut5y0007w4v60tx53jqo","comments":1,"layout":"post","photos":[],"link":"","content":"<pre><code>1.下載Ruby安裝檔\nhttps://rubyinstaller.org/downloads/\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024105747.png\" alt=\"20171024105747.png\" title=\"\">\n<pre><code>2.安裝MSYS2\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024113042.png\" alt=\"20171024113042.png\" title=\"\"> \n<img src=\"/2017/10/24/Middleman安裝/20171024113755.png\" alt=\"20171024113755.png\" title=\"\">\n<img src=\"/2017/10/24/Middleman安裝/20171024114105.png\" alt=\"20171024114105.png\" title=\"\">\n<img src=\"/2017/10/24/Middleman安裝/20171024114539.png\" alt=\"20171024114539.png\" title=\"\">\n<hr>\n<p>Open cmd window…</p>\n<pre><code>3.檢查Ruby版本\n&gt; ruby --version\n\n4.安裝Middleman\n&gt; gem install middleman\n\n5.檢查Middleman\n&gt; middleman version\n</code></pre><hr>\n<pre><code>6.使用Middleman開啟測試專案\n&gt; mmiddleman init testproject\n\n7.啟動測試專案\n&gt; mmiddleman server\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024120320.png\" alt=\"20171024120320.png\" title=\"\">\n<hr>\n<pre><code>More info:\n</code></pre><p><a href=\"https://middlemanapp.com/\" target=\"_blank\" rel=\"external\">https://middlemanapp.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>1.下載Ruby安裝檔\nhttps://rubyinstaller.org/downloads/\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024105747.png\" alt=\"20171024105747.png\" title=\"\">\n<pre><code>2.安裝MSYS2\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024113042.png\" alt=\"20171024113042.png\" title=\"\"> \n<img src=\"/2017/10/24/Middleman安裝/20171024113755.png\" alt=\"20171024113755.png\" title=\"\">\n<img src=\"/2017/10/24/Middleman安裝/20171024114105.png\" alt=\"20171024114105.png\" title=\"\">\n<img src=\"/2017/10/24/Middleman安裝/20171024114539.png\" alt=\"20171024114539.png\" title=\"\">\n<hr>\n<p>Open cmd window…</p>\n<pre><code>3.檢查Ruby版本\n&gt; ruby --version\n\n4.安裝Middleman\n&gt; gem install middleman\n\n5.檢查Middleman\n&gt; middleman version\n</code></pre><hr>\n<pre><code>6.使用Middleman開啟測試專案\n&gt; mmiddleman init testproject\n\n7.啟動測試專案\n&gt; mmiddleman server\n</code></pre><img src=\"/2017/10/24/Middleman安裝/20171024120320.png\" alt=\"20171024120320.png\" title=\"\">\n<hr>\n<pre><code>More info:\n</code></pre><p><a href=\"https://middlemanapp.com/\">https://middlemanapp.com/</a></p>\n"},{"title":"Oracle Useful SQLs","date":"2016-10-19T10:53:50.000Z","_content":"\n\nV$Session相關\n---\t\n\t[Kill session]\n\tLogin as DBA...\n\tSELECT * from v$session where type='USER' and program='SQL Developer';\n\tALTER system kill session 'SID,SERIAL#' IMMEDIATE;\n\t\n\t[產生Kill session的scripts]\n\tSELECT 'Alter system kill session ''' || SID || ','|| serial# ||''' IMMEDIATE;'  \n\tFROM V$SESSION WHERE username='xxx';\n\t\n\t[查詢Locked object name]\n\tSELECT a.sid, a.serial#,OBJECT_NAME\n\tFROM V$SESSION a, v$locked_object b, dba_objects c \n\twhere b.object_id = c.object_id \n\tand a.sid = b.session_id;\n---\n\nSystem相關\n---\n\t[清除shared_pool]測試performance前清除buffer cache。  **不可在production上執行\n\tAlter System flush shared_pool;\n\t\n\t[顯示dbms_output.put_line('');]\n\tSET SERVEROUTPUT ON;\n---\n\nDECLARE 語法的使用\n---\n\tSET SERVEROUTPUT ON;\n\tDECLARE \n\t  V_BUCODE CHAR(5):='BU003';\n\t  V_WAGERSN NUMBER:=99;\n\t  V_STAKEAMOUNT NUMBER;\n\tBEGIN\n\t  SELECT STAKEAMOUNT INTO V_STAKEAMOUNT FROM WAGER \n\t   WHERE BUCODE= UPPER(V_BUCODE) AND WAGERSN=V_WAGERSN;\n\t  dbms_output.put_line(V_STAKEAMOUNT);\n\tEND;\n\t/\n---\n\nDEFINE 語法的使用\n---\n\tDEFINE BUCODE='BU003';\n\tDEFINE WAGERSN=2066498;\n\n\tselect * from WAGER where BUCODE= UPPER('&BUCODE') and WAGERSN=&WAGERSN;\n\n\tDEFINE WAGERSN=2066499;\n\tselect * from WAGER where BUCODE= '&BUCODE' and WAGERSN=&WAGERSN;\n\n\tUNDEFINE BUCODE;\n\tUNDEFINE WAGERSN;\n---\n\n\n","source":"_posts/Oracle-Useful-SQLs.md","raw":"---\ntitle: Oracle Useful SQLs\ndate: 2016-10-19 18:53:50\ntags: DB\n---\n\n\nV$Session相關\n---\t\n\t[Kill session]\n\tLogin as DBA...\n\tSELECT * from v$session where type='USER' and program='SQL Developer';\n\tALTER system kill session 'SID,SERIAL#' IMMEDIATE;\n\t\n\t[產生Kill session的scripts]\n\tSELECT 'Alter system kill session ''' || SID || ','|| serial# ||''' IMMEDIATE;'  \n\tFROM V$SESSION WHERE username='xxx';\n\t\n\t[查詢Locked object name]\n\tSELECT a.sid, a.serial#,OBJECT_NAME\n\tFROM V$SESSION a, v$locked_object b, dba_objects c \n\twhere b.object_id = c.object_id \n\tand a.sid = b.session_id;\n---\n\nSystem相關\n---\n\t[清除shared_pool]測試performance前清除buffer cache。  **不可在production上執行\n\tAlter System flush shared_pool;\n\t\n\t[顯示dbms_output.put_line('');]\n\tSET SERVEROUTPUT ON;\n---\n\nDECLARE 語法的使用\n---\n\tSET SERVEROUTPUT ON;\n\tDECLARE \n\t  V_BUCODE CHAR(5):='BU003';\n\t  V_WAGERSN NUMBER:=99;\n\t  V_STAKEAMOUNT NUMBER;\n\tBEGIN\n\t  SELECT STAKEAMOUNT INTO V_STAKEAMOUNT FROM WAGER \n\t   WHERE BUCODE= UPPER(V_BUCODE) AND WAGERSN=V_WAGERSN;\n\t  dbms_output.put_line(V_STAKEAMOUNT);\n\tEND;\n\t/\n---\n\nDEFINE 語法的使用\n---\n\tDEFINE BUCODE='BU003';\n\tDEFINE WAGERSN=2066498;\n\n\tselect * from WAGER where BUCODE= UPPER('&BUCODE') and WAGERSN=&WAGERSN;\n\n\tDEFINE WAGERSN=2066499;\n\tselect * from WAGER where BUCODE= '&BUCODE' and WAGERSN=&WAGERSN;\n\n\tUNDEFINE BUCODE;\n\tUNDEFINE WAGERSN;\n---\n\n\n","slug":"Oracle-Useful-SQLs","published":1,"updated":"2017-04-11T09:16:52.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut60000aw4v6x2ufnaff","content":"<h2 id=\"V-Session相關\"><a href=\"#V-Session相關\" class=\"headerlink\" title=\"V$Session相關\"></a>V$Session相關</h2><pre><code>[Kill session]\nLogin as DBA...\nSELECT * from v$session where type=&apos;USER&apos; and program=&apos;SQL Developer&apos;;\nALTER system kill session &apos;SID,SERIAL#&apos; IMMEDIATE;\n\n[產生Kill session的scripts]\nSELECT &apos;Alter system kill session &apos;&apos;&apos; || SID || &apos;,&apos;|| serial# ||&apos;&apos;&apos; IMMEDIATE;&apos;  \nFROM V$SESSION WHERE username=&apos;xxx&apos;;\n\n[查詢Locked object name]\nSELECT a.sid, a.serial#,OBJECT_NAME\nFROM V$SESSION a, v$locked_object b, dba_objects c \nwhere b.object_id = c.object_id \nand a.sid = b.session_id;\n</code></pre><hr>\n<h2 id=\"System相關\"><a href=\"#System相關\" class=\"headerlink\" title=\"System相關\"></a>System相關</h2><pre><code>[清除shared_pool]測試performance前清除buffer cache。  **不可在production上執行\nAlter System flush shared_pool;\n\n[顯示dbms_output.put_line(&apos;&apos;);]\nSET SERVEROUTPUT ON;\n</code></pre><hr>\n<h2 id=\"DECLARE-語法的使用\"><a href=\"#DECLARE-語法的使用\" class=\"headerlink\" title=\"DECLARE 語法的使用\"></a>DECLARE 語法的使用</h2><pre><code>SET SERVEROUTPUT ON;\nDECLARE \n  V_BUCODE CHAR(5):=&apos;BU003&apos;;\n  V_WAGERSN NUMBER:=99;\n  V_STAKEAMOUNT NUMBER;\nBEGIN\n  SELECT STAKEAMOUNT INTO V_STAKEAMOUNT FROM WAGER \n   WHERE BUCODE= UPPER(V_BUCODE) AND WAGERSN=V_WAGERSN;\n  dbms_output.put_line(V_STAKEAMOUNT);\nEND;\n/\n</code></pre><hr>\n<h2 id=\"DEFINE-語法的使用\"><a href=\"#DEFINE-語法的使用\" class=\"headerlink\" title=\"DEFINE 語法的使用\"></a>DEFINE 語法的使用</h2><pre><code>DEFINE BUCODE=&apos;BU003&apos;;\nDEFINE WAGERSN=2066498;\n\nselect * from WAGER where BUCODE= UPPER(&apos;&amp;BUCODE&apos;) and WAGERSN=&amp;WAGERSN;\n\nDEFINE WAGERSN=2066499;\nselect * from WAGER where BUCODE= &apos;&amp;BUCODE&apos; and WAGERSN=&amp;WAGERSN;\n\nUNDEFINE BUCODE;\nUNDEFINE WAGERSN;\n</code></pre><hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"V-Session相關\"><a href=\"#V-Session相關\" class=\"headerlink\" title=\"V$Session相關\"></a>V$Session相關</h2><pre><code>[Kill session]\nLogin as DBA...\nSELECT * from v$session where type=&apos;USER&apos; and program=&apos;SQL Developer&apos;;\nALTER system kill session &apos;SID,SERIAL#&apos; IMMEDIATE;\n\n[產生Kill session的scripts]\nSELECT &apos;Alter system kill session &apos;&apos;&apos; || SID || &apos;,&apos;|| serial# ||&apos;&apos;&apos; IMMEDIATE;&apos;  \nFROM V$SESSION WHERE username=&apos;xxx&apos;;\n\n[查詢Locked object name]\nSELECT a.sid, a.serial#,OBJECT_NAME\nFROM V$SESSION a, v$locked_object b, dba_objects c \nwhere b.object_id = c.object_id \nand a.sid = b.session_id;\n</code></pre><hr>\n<h2 id=\"System相關\"><a href=\"#System相關\" class=\"headerlink\" title=\"System相關\"></a>System相關</h2><pre><code>[清除shared_pool]測試performance前清除buffer cache。  **不可在production上執行\nAlter System flush shared_pool;\n\n[顯示dbms_output.put_line(&apos;&apos;);]\nSET SERVEROUTPUT ON;\n</code></pre><hr>\n<h2 id=\"DECLARE-語法的使用\"><a href=\"#DECLARE-語法的使用\" class=\"headerlink\" title=\"DECLARE 語法的使用\"></a>DECLARE 語法的使用</h2><pre><code>SET SERVEROUTPUT ON;\nDECLARE \n  V_BUCODE CHAR(5):=&apos;BU003&apos;;\n  V_WAGERSN NUMBER:=99;\n  V_STAKEAMOUNT NUMBER;\nBEGIN\n  SELECT STAKEAMOUNT INTO V_STAKEAMOUNT FROM WAGER \n   WHERE BUCODE= UPPER(V_BUCODE) AND WAGERSN=V_WAGERSN;\n  dbms_output.put_line(V_STAKEAMOUNT);\nEND;\n/\n</code></pre><hr>\n<h2 id=\"DEFINE-語法的使用\"><a href=\"#DEFINE-語法的使用\" class=\"headerlink\" title=\"DEFINE 語法的使用\"></a>DEFINE 語法的使用</h2><pre><code>DEFINE BUCODE=&apos;BU003&apos;;\nDEFINE WAGERSN=2066498;\n\nselect * from WAGER where BUCODE= UPPER(&apos;&amp;BUCODE&apos;) and WAGERSN=&amp;WAGERSN;\n\nDEFINE WAGERSN=2066499;\nselect * from WAGER where BUCODE= &apos;&amp;BUCODE&apos; and WAGERSN=&amp;WAGERSN;\n\nUNDEFINE BUCODE;\nUNDEFINE WAGERSN;\n</code></pre><hr>\n"},{"title":"OracleServerArchitecture","date":"2016-08-23T04:24:25.000Z","_content":"{% asset_img OracleServerArchitecture.png %}","source":"_posts/OracleServerArchitecture.md","raw":"---\ntitle: OracleServerArchitecture\ndate: 2016-08-23 12:24:25\ntags: DB\n---\n{% asset_img OracleServerArchitecture.png %}","slug":"OracleServerArchitecture","published":1,"updated":"2017-04-11T09:16:52.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut63000cw4v6xn0rtxuw","content":"<img src=\"/2016/08/23/OracleServerArchitecture/OracleServerArchitecture.png\" alt=\"OracleServerArchitecture.png\" title=\"\">","site":{"data":{}},"excerpt":"","more":"<img src=\"/2016/08/23/OracleServerArchitecture/OracleServerArchitecture.png\" alt=\"OracleServerArchitecture.png\" title=\"\">"},{"title":"Oracle Command On Linux","date":"2016-06-07T02:54:38.000Z","_content":"\n用root登入DB後,切換為oracle的使用者:\n---\n    # su - oracle\n\t\n---\n檢查監聽器狀態:\n---\n\t$ lsnrctl status\n\t\n---\nDB關閉:\n---\n\t關閉監聽器: \n    1)$ lsnrctl stop\n    \n\t用sysdba登入sqlplus\n\t2)$ sqlplus '/ as sysdba'\n    3)SQL> shutdown immediate (shutdown abort)\n\t\n---\t\nDB開啟:\n---\n    1)開啟監聽器:\n\t$ lsnrctl start\n\t\n\t用sysdba登入sqlplus\n    2)$ sqlplus '/ as sysdba'\n    3)SQL> startup\n{% asset_img startupDB.png %}\n\n---\nOracle Enterprise Manager (EM)\n---\n    查看dbconsole狀態:\n    $ emctl status dbconsole\n\n    重啟DB後需執行\n\t$ emctl start dbconsole\n\t才能使用https://192.168.56.101:1158/em\n\n\t開啟EM服務:\n\t$ emctl start dbconsole\n\n    關閉EM服務:\n\t$ emctl stop dbconsole\n\n    刪除一個EM資料庫:\n    $ emca -repos drop\n\n\t創建一個EM資料庫(包含config):\n    $ emca -repos create\n    (重建一個EM資料庫: $ emca -repos recreate)\n\n    刪除em的config:\n    $ emca -deconfig dbcontrol db\n\n\t配置em的config(SID,1521):\n    $ emca -config dbcontrol db\n\n    若出現'job_queue_processes' must be greater than or equal to 1.的錯誤訊息,修改設定DB 參數job_queue_processes=10 後重跑\n\t$ emca -config dbcontrol db\n\n\t$ sqlplus '/ as sysdba'\n    SQL> show parameter job\n    SQL> alter system set job_queue_processes=10 scope=both;\n\n    System altered.\n\n    SQL> show parameter job\t\n\t\n---\n","source":"_posts/Oracle-Command-On-Linux.md","raw":"---\ntitle: Oracle Command On Linux\ndate: 2016-06-07 10:54:38\ntags: DB\n---\n\n用root登入DB後,切換為oracle的使用者:\n---\n    # su - oracle\n\t\n---\n檢查監聽器狀態:\n---\n\t$ lsnrctl status\n\t\n---\nDB關閉:\n---\n\t關閉監聽器: \n    1)$ lsnrctl stop\n    \n\t用sysdba登入sqlplus\n\t2)$ sqlplus '/ as sysdba'\n    3)SQL> shutdown immediate (shutdown abort)\n\t\n---\t\nDB開啟:\n---\n    1)開啟監聽器:\n\t$ lsnrctl start\n\t\n\t用sysdba登入sqlplus\n    2)$ sqlplus '/ as sysdba'\n    3)SQL> startup\n{% asset_img startupDB.png %}\n\n---\nOracle Enterprise Manager (EM)\n---\n    查看dbconsole狀態:\n    $ emctl status dbconsole\n\n    重啟DB後需執行\n\t$ emctl start dbconsole\n\t才能使用https://192.168.56.101:1158/em\n\n\t開啟EM服務:\n\t$ emctl start dbconsole\n\n    關閉EM服務:\n\t$ emctl stop dbconsole\n\n    刪除一個EM資料庫:\n    $ emca -repos drop\n\n\t創建一個EM資料庫(包含config):\n    $ emca -repos create\n    (重建一個EM資料庫: $ emca -repos recreate)\n\n    刪除em的config:\n    $ emca -deconfig dbcontrol db\n\n\t配置em的config(SID,1521):\n    $ emca -config dbcontrol db\n\n    若出現'job_queue_processes' must be greater than or equal to 1.的錯誤訊息,修改設定DB 參數job_queue_processes=10 後重跑\n\t$ emca -config dbcontrol db\n\n\t$ sqlplus '/ as sysdba'\n    SQL> show parameter job\n    SQL> alter system set job_queue_processes=10 scope=both;\n\n    System altered.\n\n    SQL> show parameter job\t\n\t\n---\n","slug":"Oracle-Command-On-Linux","published":1,"updated":"2017-04-11T09:16:52.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut65000ew4v67ba5pdjq","content":"<h2 id=\"用root登入DB後-切換為oracle的使用者\"><a href=\"#用root登入DB後-切換為oracle的使用者\" class=\"headerlink\" title=\"用root登入DB後,切換為oracle的使用者:\"></a>用root登入DB後,切換為oracle的使用者:</h2><pre><code># su - oracle\n</code></pre><hr>\n<h2 id=\"檢查監聽器狀態\"><a href=\"#檢查監聽器狀態\" class=\"headerlink\" title=\"檢查監聽器狀態:\"></a>檢查監聽器狀態:</h2><pre><code>$ lsnrctl status\n</code></pre><hr>\n<h2 id=\"DB關閉\"><a href=\"#DB關閉\" class=\"headerlink\" title=\"DB關閉:\"></a>DB關閉:</h2><pre><code>關閉監聽器: \n1)$ lsnrctl stop\n\n用sysdba登入sqlplus\n2)$ sqlplus &apos;/ as sysdba&apos;\n3)SQL&gt; shutdown immediate (shutdown abort)\n</code></pre><hr>\n<h2 id=\"DB開啟\"><a href=\"#DB開啟\" class=\"headerlink\" title=\"DB開啟:\"></a>DB開啟:</h2><pre><code>1)開啟監聽器:\n$ lsnrctl start\n\n用sysdba登入sqlplus\n2)$ sqlplus &apos;/ as sysdba&apos;\n3)SQL&gt; startup\n</code></pre><img src=\"/2016/06/07/Oracle-Command-On-Linux/startupDB.png\" alt=\"startupDB.png\" title=\"\">\n<hr>\n<h2 id=\"Oracle-Enterprise-Manager-EM\"><a href=\"#Oracle-Enterprise-Manager-EM\" class=\"headerlink\" title=\"Oracle Enterprise Manager (EM)\"></a>Oracle Enterprise Manager (EM)</h2><pre><code>查看dbconsole狀態:\n$ emctl status dbconsole\n\n重啟DB後需執行\n$ emctl start dbconsole\n才能使用https://192.168.56.101:1158/em\n\n開啟EM服務:\n$ emctl start dbconsole\n\n關閉EM服務:\n$ emctl stop dbconsole\n\n刪除一個EM資料庫:\n$ emca -repos drop\n\n創建一個EM資料庫(包含config):\n$ emca -repos create\n(重建一個EM資料庫: $ emca -repos recreate)\n\n刪除em的config:\n$ emca -deconfig dbcontrol db\n\n配置em的config(SID,1521):\n$ emca -config dbcontrol db\n\n若出現&apos;job_queue_processes&apos; must be greater than or equal to 1.的錯誤訊息,修改設定DB 參數job_queue_processes=10 後重跑\n$ emca -config dbcontrol db\n\n$ sqlplus &apos;/ as sysdba&apos;\nSQL&gt; show parameter job\nSQL&gt; alter system set job_queue_processes=10 scope=both;\n\nSystem altered.\n\nSQL&gt; show parameter job    \n</code></pre><hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"用root登入DB後-切換為oracle的使用者\"><a href=\"#用root登入DB後-切換為oracle的使用者\" class=\"headerlink\" title=\"用root登入DB後,切換為oracle的使用者:\"></a>用root登入DB後,切換為oracle的使用者:</h2><pre><code># su - oracle\n</code></pre><hr>\n<h2 id=\"檢查監聽器狀態\"><a href=\"#檢查監聽器狀態\" class=\"headerlink\" title=\"檢查監聽器狀態:\"></a>檢查監聽器狀態:</h2><pre><code>$ lsnrctl status\n</code></pre><hr>\n<h2 id=\"DB關閉\"><a href=\"#DB關閉\" class=\"headerlink\" title=\"DB關閉:\"></a>DB關閉:</h2><pre><code>關閉監聽器: \n1)$ lsnrctl stop\n\n用sysdba登入sqlplus\n2)$ sqlplus &apos;/ as sysdba&apos;\n3)SQL&gt; shutdown immediate (shutdown abort)\n</code></pre><hr>\n<h2 id=\"DB開啟\"><a href=\"#DB開啟\" class=\"headerlink\" title=\"DB開啟:\"></a>DB開啟:</h2><pre><code>1)開啟監聽器:\n$ lsnrctl start\n\n用sysdba登入sqlplus\n2)$ sqlplus &apos;/ as sysdba&apos;\n3)SQL&gt; startup\n</code></pre><img src=\"/2016/06/07/Oracle-Command-On-Linux/startupDB.png\" alt=\"startupDB.png\" title=\"\">\n<hr>\n<h2 id=\"Oracle-Enterprise-Manager-EM\"><a href=\"#Oracle-Enterprise-Manager-EM\" class=\"headerlink\" title=\"Oracle Enterprise Manager (EM)\"></a>Oracle Enterprise Manager (EM)</h2><pre><code>查看dbconsole狀態:\n$ emctl status dbconsole\n\n重啟DB後需執行\n$ emctl start dbconsole\n才能使用https://192.168.56.101:1158/em\n\n開啟EM服務:\n$ emctl start dbconsole\n\n關閉EM服務:\n$ emctl stop dbconsole\n\n刪除一個EM資料庫:\n$ emca -repos drop\n\n創建一個EM資料庫(包含config):\n$ emca -repos create\n(重建一個EM資料庫: $ emca -repos recreate)\n\n刪除em的config:\n$ emca -deconfig dbcontrol db\n\n配置em的config(SID,1521):\n$ emca -config dbcontrol db\n\n若出現&apos;job_queue_processes&apos; must be greater than or equal to 1.的錯誤訊息,修改設定DB 參數job_queue_processes=10 後重跑\n$ emca -config dbcontrol db\n\n$ sqlplus &apos;/ as sysdba&apos;\nSQL&gt; show parameter job\nSQL&gt; alter system set job_queue_processes=10 scope=both;\n\nSystem altered.\n\nSQL&gt; show parameter job    \n</code></pre><hr>\n"},{"title":"Vagrant","date":"2017-10-24T12:05:28.000Z","_content":"\n\t1.下載VirtualBox(VirtualBox-5.1.30-118389-Win.exe)並安裝，請注意Vagrant目前支援的版本\nhttps://www.virtualbox.org/wiki/Download_Old_Builds_5_1\n\t\n{% asset_img VMversion.png %}\n{% asset_img Image-VMinstall.png %}\n\t\n\t2.設定VM存放到自己想要的目錄位置\n{% asset_img Image-VMD.png %}\n\n---\n\t3.下載Vargrant(vagrant_2.0.0_x86_64.msi)並安裝\nhttps://www.vagrantup.com/downloads.html\n\n\t4.選擇想要的VM，使用Vagrant指令啟動\nhttps://app.vagrantup.com/boxes/search\n\t\t\n{% asset_img Image-hashicorp.png %}\n\t以hashicorp/precise64為例\n\t\n\t> vagrant init hashicorp/precise64\n\t\n\t> vagrant up --provider virtualbox\n\n{% asset_img Image-VagrantCmd.png %}\n\n---\n\t5.使用putty.exe連線到VM\n\n\tSSH預設帳密: root/vgrant vagrant/vagrant\n{% asset_img Image-ssh.png %}\n\n","source":"_posts/Vagrant.md","raw":"---\ntitle: Vagrant\ndate: 2017-10-24 20:05:28\ntags:\n---\n\n\t1.下載VirtualBox(VirtualBox-5.1.30-118389-Win.exe)並安裝，請注意Vagrant目前支援的版本\nhttps://www.virtualbox.org/wiki/Download_Old_Builds_5_1\n\t\n{% asset_img VMversion.png %}\n{% asset_img Image-VMinstall.png %}\n\t\n\t2.設定VM存放到自己想要的目錄位置\n{% asset_img Image-VMD.png %}\n\n---\n\t3.下載Vargrant(vagrant_2.0.0_x86_64.msi)並安裝\nhttps://www.vagrantup.com/downloads.html\n\n\t4.選擇想要的VM，使用Vagrant指令啟動\nhttps://app.vagrantup.com/boxes/search\n\t\t\n{% asset_img Image-hashicorp.png %}\n\t以hashicorp/precise64為例\n\t\n\t> vagrant init hashicorp/precise64\n\t\n\t> vagrant up --provider virtualbox\n\n{% asset_img Image-VagrantCmd.png %}\n\n---\n\t5.使用putty.exe連線到VM\n\n\tSSH預設帳密: root/vgrant vagrant/vagrant\n{% asset_img Image-ssh.png %}\n\n","slug":"Vagrant","published":1,"updated":"2017-10-30T10:43:40.139Z","_id":"cj9e0ut67000gw4v6on8vzuhe","comments":1,"layout":"post","photos":[],"link":"","content":"<pre><code>1.下載VirtualBox(VirtualBox-5.1.30-118389-Win.exe)並安裝，請注意Vagrant目前支援的版本\n</code></pre><p><a href=\"https://www.virtualbox.org/wiki/Download_Old_Builds_5_1\" target=\"_blank\" rel=\"external\">https://www.virtualbox.org/wiki/Download_Old_Builds_5_1</a></p>\n<img src=\"/2017/10/24/Vagrant/VMversion.png\" alt=\"VMversion.png\" title=\"\">\n<img src=\"/2017/10/24/Vagrant/Image-VMinstall.png\" alt=\"Image-VMinstall.png\" title=\"\">\n<pre><code>2.設定VM存放到自己想要的目錄位置\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-VMD.png\" alt=\"Image-VMD.png\" title=\"\">\n<hr>\n<pre><code>3.下載Vargrant(vagrant_2.0.0_x86_64.msi)並安裝\n</code></pre><p><a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"external\">https://www.vagrantup.com/downloads.html</a></p>\n<pre><code>4.選擇想要的VM，使用Vagrant指令啟動\n</code></pre><p><a href=\"https://app.vagrantup.com/boxes/search\" target=\"_blank\" rel=\"external\">https://app.vagrantup.com/boxes/search</a></p>\n<img src=\"/2017/10/24/Vagrant/Image-hashicorp.png\" alt=\"Image-hashicorp.png\" title=\"\">\n<pre><code>以hashicorp/precise64為例\n\n&gt; vagrant init hashicorp/precise64\n\n&gt; vagrant up --provider virtualbox\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-VagrantCmd.png\" alt=\"Image-VagrantCmd.png\" title=\"\">\n<hr>\n<pre><code>5.使用putty.exe連線到VM\n\nSSH預設帳密: root/vgrant vagrant/vagrant\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-ssh.png\" alt=\"Image-ssh.png\" title=\"\">\n","site":{"data":{}},"excerpt":"","more":"<pre><code>1.下載VirtualBox(VirtualBox-5.1.30-118389-Win.exe)並安裝，請注意Vagrant目前支援的版本\n</code></pre><p><a href=\"https://www.virtualbox.org/wiki/Download_Old_Builds_5_1\">https://www.virtualbox.org/wiki/Download_Old_Builds_5_1</a></p>\n<img src=\"/2017/10/24/Vagrant/VMversion.png\" alt=\"VMversion.png\" title=\"\">\n<img src=\"/2017/10/24/Vagrant/Image-VMinstall.png\" alt=\"Image-VMinstall.png\" title=\"\">\n<pre><code>2.設定VM存放到自己想要的目錄位置\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-VMD.png\" alt=\"Image-VMD.png\" title=\"\">\n<hr>\n<pre><code>3.下載Vargrant(vagrant_2.0.0_x86_64.msi)並安裝\n</code></pre><p><a href=\"https://www.vagrantup.com/downloads.html\">https://www.vagrantup.com/downloads.html</a></p>\n<pre><code>4.選擇想要的VM，使用Vagrant指令啟動\n</code></pre><p><a href=\"https://app.vagrantup.com/boxes/search\">https://app.vagrantup.com/boxes/search</a></p>\n<img src=\"/2017/10/24/Vagrant/Image-hashicorp.png\" alt=\"Image-hashicorp.png\" title=\"\">\n<pre><code>以hashicorp/precise64為例\n\n&gt; vagrant init hashicorp/precise64\n\n&gt; vagrant up --provider virtualbox\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-VagrantCmd.png\" alt=\"Image-VagrantCmd.png\" title=\"\">\n<hr>\n<pre><code>5.使用putty.exe連線到VM\n\nSSH預設帳密: root/vgrant vagrant/vagrant\n</code></pre><img src=\"/2017/10/24/Vagrant/Image-ssh.png\" alt=\"Image-ssh.png\" title=\"\">\n"},{"title":"Redis Command","date":"2016-12-06T10:22:24.000Z","_content":"\nRedis相關指令\n---\n\t查詢Redis狀態:\n\t# ps -ef | grep redis\n    # service <redis instance name> status\n\tex. service redis_6379 status\n\t\n\t運作資訊查詢:\n\t# redis-cli -p <port> -a <password> info\n\t# redis-cli -p <port> -a <password> info Replication\n  \n    修改config:\n    # vi more </path/config file name>\n\tex. vi /redis/etc/redis_6379.conf\n\t\n    查詢log:\n\t# more </path/log file name>\n\tex. more /redis/log/redis_6379.log\n\n    關閉Redis instance:\n\t# redis-cli -p <port> -a <password>\n    > shutdown\n\n    啟動Redis instance:\n    # service <redis instance name> start\n    ex. service redis_6379 start\n\t\n\t測試redis-benchmark:\n\t# redis-benchmark -h <host> -p <port> -a <password> -q -n 100000 -d 512\n\t(可用 # redis-benchmark -h 查詢參數說明)\n\t\n\t測試Redis的latency:\n\t# redis-cli -p <port> --latency\n    # redis-cli -p <port> --intrinsic-latency 100\n\n\n---\nSentinel相關指令\n---\n    Config Sentinel:\n    # cp /redis/src/redis-3.2.3/sentinel.conf /redis/etc\n\t# vi /redis/etc/sentinel.conf (修改內容如下:)\n\t\n\tport 26379\n\tsentinel monitor mymaster <ip> <port> 1\n\tsentinel auth-pass mymaster <password>\n\tsentinel down-after-milliseconds mymaster 30000\n\t#sentinel parallel-syncs mymaster 1\n\tsentinel failover-timeout mymaster 180000\n\t#sentinel notification-script mymaster <script-path>\n\t\n\t#Add this two lines in the last\n    daemonize yes\n    logfile /redis/log/sentinel.log\n\t\n\tprotect-mode no (如需遠端連此sentinel才需要這個設定)\n\t\n\t參考: https://segmentfault.com/a/1190000002680804\n\t\n\t[修改完sentinel.conf後啟動指令如下:]\n\t#redis-sentinel /redis/etc/sentinel.conf\n\t\n\t如果master/slave因故被sentinel切換了，回復方式如下:\n    登入sentinel: # redis-cli -p 26379\n    手動切換指令: > sentinel failover mymaster\n    (原本master的redis.conf也必須設定masterauth <master-password>才能正常運作)\n\t\n\t運作資訊查詢:\n\t# redis-cli -p 26379 info\n\n    ","source":"_posts/Redis-Command.md","raw":"---\ntitle: Redis Command\ndate: 2016-12-06 18:22:24\ntags:\n---\n\nRedis相關指令\n---\n\t查詢Redis狀態:\n\t# ps -ef | grep redis\n    # service <redis instance name> status\n\tex. service redis_6379 status\n\t\n\t運作資訊查詢:\n\t# redis-cli -p <port> -a <password> info\n\t# redis-cli -p <port> -a <password> info Replication\n  \n    修改config:\n    # vi more </path/config file name>\n\tex. vi /redis/etc/redis_6379.conf\n\t\n    查詢log:\n\t# more </path/log file name>\n\tex. more /redis/log/redis_6379.log\n\n    關閉Redis instance:\n\t# redis-cli -p <port> -a <password>\n    > shutdown\n\n    啟動Redis instance:\n    # service <redis instance name> start\n    ex. service redis_6379 start\n\t\n\t測試redis-benchmark:\n\t# redis-benchmark -h <host> -p <port> -a <password> -q -n 100000 -d 512\n\t(可用 # redis-benchmark -h 查詢參數說明)\n\t\n\t測試Redis的latency:\n\t# redis-cli -p <port> --latency\n    # redis-cli -p <port> --intrinsic-latency 100\n\n\n---\nSentinel相關指令\n---\n    Config Sentinel:\n    # cp /redis/src/redis-3.2.3/sentinel.conf /redis/etc\n\t# vi /redis/etc/sentinel.conf (修改內容如下:)\n\t\n\tport 26379\n\tsentinel monitor mymaster <ip> <port> 1\n\tsentinel auth-pass mymaster <password>\n\tsentinel down-after-milliseconds mymaster 30000\n\t#sentinel parallel-syncs mymaster 1\n\tsentinel failover-timeout mymaster 180000\n\t#sentinel notification-script mymaster <script-path>\n\t\n\t#Add this two lines in the last\n    daemonize yes\n    logfile /redis/log/sentinel.log\n\t\n\tprotect-mode no (如需遠端連此sentinel才需要這個設定)\n\t\n\t參考: https://segmentfault.com/a/1190000002680804\n\t\n\t[修改完sentinel.conf後啟動指令如下:]\n\t#redis-sentinel /redis/etc/sentinel.conf\n\t\n\t如果master/slave因故被sentinel切換了，回復方式如下:\n    登入sentinel: # redis-cli -p 26379\n    手動切換指令: > sentinel failover mymaster\n    (原本master的redis.conf也必須設定masterauth <master-password>才能正常運作)\n\t\n\t運作資訊查詢:\n\t# redis-cli -p 26379 info\n\n    ","slug":"Redis-Command","published":1,"updated":"2017-04-11T09:16:52.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut69000iw4v6o3c733br","content":"<h2 id=\"Redis相關指令\"><a href=\"#Redis相關指令\" class=\"headerlink\" title=\"Redis相關指令\"></a>Redis相關指令</h2><pre><code>查詢Redis狀態:\n# ps -ef | grep redis\n# service &lt;redis instance name&gt; status\nex. service redis_6379 status\n\n運作資訊查詢:\n# redis-cli -p &lt;port&gt; -a &lt;password&gt; info\n# redis-cli -p &lt;port&gt; -a &lt;password&gt; info Replication\n\n修改config:\n# vi more &lt;/path/config file name&gt;\nex. vi /redis/etc/redis_6379.conf\n\n查詢log:\n# more &lt;/path/log file name&gt;\nex. more /redis/log/redis_6379.log\n\n關閉Redis instance:\n# redis-cli -p &lt;port&gt; -a &lt;password&gt;\n&gt; shutdown\n\n啟動Redis instance:\n# service &lt;redis instance name&gt; start\nex. service redis_6379 start\n\n測試redis-benchmark:\n# redis-benchmark -h &lt;host&gt; -p &lt;port&gt; -a &lt;password&gt; -q -n 100000 -d 512\n(可用 # redis-benchmark -h 查詢參數說明)\n\n測試Redis的latency:\n# redis-cli -p &lt;port&gt; --latency\n# redis-cli -p &lt;port&gt; --intrinsic-latency 100\n</code></pre><hr>\n<h2 id=\"Sentinel相關指令\"><a href=\"#Sentinel相關指令\" class=\"headerlink\" title=\"Sentinel相關指令\"></a>Sentinel相關指令</h2><pre><code>Config Sentinel:\n# cp /redis/src/redis-3.2.3/sentinel.conf /redis/etc\n# vi /redis/etc/sentinel.conf (修改內容如下:)\n\nport 26379\nsentinel monitor mymaster &lt;ip&gt; &lt;port&gt; 1\nsentinel auth-pass mymaster &lt;password&gt;\nsentinel down-after-milliseconds mymaster 30000\n#sentinel parallel-syncs mymaster 1\nsentinel failover-timeout mymaster 180000\n#sentinel notification-script mymaster &lt;script-path&gt;\n\n#Add this two lines in the last\ndaemonize yes\nlogfile /redis/log/sentinel.log\n\nprotect-mode no (如需遠端連此sentinel才需要這個設定)\n\n參考: https://segmentfault.com/a/1190000002680804\n\n[修改完sentinel.conf後啟動指令如下:]\n#redis-sentinel /redis/etc/sentinel.conf\n\n如果master/slave因故被sentinel切換了，回復方式如下:\n登入sentinel: # redis-cli -p 26379\n手動切換指令: &gt; sentinel failover mymaster\n(原本master的redis.conf也必須設定masterauth &lt;master-password&gt;才能正常運作)\n\n運作資訊查詢:\n# redis-cli -p 26379 info\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Redis相關指令\"><a href=\"#Redis相關指令\" class=\"headerlink\" title=\"Redis相關指令\"></a>Redis相關指令</h2><pre><code>查詢Redis狀態:\n# ps -ef | grep redis\n# service &lt;redis instance name&gt; status\nex. service redis_6379 status\n\n運作資訊查詢:\n# redis-cli -p &lt;port&gt; -a &lt;password&gt; info\n# redis-cli -p &lt;port&gt; -a &lt;password&gt; info Replication\n\n修改config:\n# vi more &lt;/path/config file name&gt;\nex. vi /redis/etc/redis_6379.conf\n\n查詢log:\n# more &lt;/path/log file name&gt;\nex. more /redis/log/redis_6379.log\n\n關閉Redis instance:\n# redis-cli -p &lt;port&gt; -a &lt;password&gt;\n&gt; shutdown\n\n啟動Redis instance:\n# service &lt;redis instance name&gt; start\nex. service redis_6379 start\n\n測試redis-benchmark:\n# redis-benchmark -h &lt;host&gt; -p &lt;port&gt; -a &lt;password&gt; -q -n 100000 -d 512\n(可用 # redis-benchmark -h 查詢參數說明)\n\n測試Redis的latency:\n# redis-cli -p &lt;port&gt; --latency\n# redis-cli -p &lt;port&gt; --intrinsic-latency 100\n</code></pre><hr>\n<h2 id=\"Sentinel相關指令\"><a href=\"#Sentinel相關指令\" class=\"headerlink\" title=\"Sentinel相關指令\"></a>Sentinel相關指令</h2><pre><code>Config Sentinel:\n# cp /redis/src/redis-3.2.3/sentinel.conf /redis/etc\n# vi /redis/etc/sentinel.conf (修改內容如下:)\n\nport 26379\nsentinel monitor mymaster &lt;ip&gt; &lt;port&gt; 1\nsentinel auth-pass mymaster &lt;password&gt;\nsentinel down-after-milliseconds mymaster 30000\n#sentinel parallel-syncs mymaster 1\nsentinel failover-timeout mymaster 180000\n#sentinel notification-script mymaster &lt;script-path&gt;\n\n#Add this two lines in the last\ndaemonize yes\nlogfile /redis/log/sentinel.log\n\nprotect-mode no (如需遠端連此sentinel才需要這個設定)\n\n參考: https://segmentfault.com/a/1190000002680804\n\n[修改完sentinel.conf後啟動指令如下:]\n#redis-sentinel /redis/etc/sentinel.conf\n\n如果master/slave因故被sentinel切換了，回復方式如下:\n登入sentinel: # redis-cli -p 26379\n手動切換指令: &gt; sentinel failover mymaster\n(原本master的redis.conf也必須設定masterauth &lt;master-password&gt;才能正常運作)\n\n運作資訊查詢:\n# redis-cli -p 26379 info\n</code></pre>"},{"title":"Redo-Undo-Commit","date":"2016-11-01T09:59:04.000Z","_content":"\nRedo\n---\n    Redo log files are the transaction logs for the database.\n\tOracle maintains two types of redo log files: online and archived.\n\tThey are used for recovery purposes.\nRedo log就是DB的交易記錄，最主要是的用途是復原資料。\n\n{% asset_img redolog.png %}\n\n---\n    Every Oracle database has at least two online redo log groups with at least a single member(redo log file) in each group.\n\tThese online redo log groups are used in a circular fashion.\n每個Oracle DB 至少會有2個online的redo log組成redo log groups(每個redo log至少會有一個member)，並以循環的方使用。\n\n{% asset_img RedoLogMembers.png %}\n\n---\n\nUndo\n---\n    Undo information is generated by the database as you make modifications to data to put it back the way it was before the modifications,\n\tin the event the transaction or statement you are executing fails for any reason or if you request it with a ROLLBACK statement.\nUndo是將資料回復到修改之前的狀態，通常因為某些原因或交易失敗而執行ROLLBACK。\n\n---\n    The database is logically restored to the way it was, any changes are logically undone,\n\tthe database blocks themselves, may well be different after a rollback.\nRollback是邏輯上將資料回復到原本的狀態，在Rollback以後實際資料存放的區塊與原本完全不同。\n\t\n---\n\nCommit\n---\n    A COMMIT is generally a very fast operation, regardless of the transaction size.\nCOMMIT通常是一個很快的動作，與交易的大小無關。\n\n---\n    If a COMMIT of one row takes X units of time, and the COMMIT of 1,000 rows takes the same X units of time.\nCOMMIT一筆資料列跟commit一千筆資料列同樣都是花費X的單位時間。\n\n---\n    By committing only when you have to(when the logical unit of work is complete),\n    you will not only increase performance,\tbut also reduce contention for shared resources\n\t(log files, various internal latches...).\n有需要時才COMMIT(商業邏輯完成時)，如此非但可以增加效能，更可以減少共用資源的使用。\n\n---\n    It is best to size our transactions based on business need,\n\tnot based on misguided attempts to lessen resource usage on the database.\n依據商業邏輯的需求去控制交易的大小，而非基於減少DB資源的誤導嘗試。\n\n---\t\n    There are two contributing factors to the expense of the COMMIT:\n    • We’ve obviously increased the round-trips to and from the database. \n      If we commit every record, we are generating that much more traffic back and forth.\n    • Every time we commit, we must wait for our redo to be written to disk. This will result in a “wait.” \n      In this case, the wait is named “log file sync”.\nCOMMIT對系統的兩個主要花費如下:\n• 數據的往返，多次的Commit會增加更多的流量來回\n• 每當我們COMMIT就必須等待RedoLog寫入Disk。這個等待叫作“log file sync.”\n\n---\n    When we committed after every INSERT, we waited almost every time—and if you wait a little bit of time but you wait often, then it all adds up.\n每次COMMIT一筆INSERT都要等待一點時間，所以如果我們Commit很多次，結果會是這些時間的加總。\n\n---\n    Before we even go to COMMIT in the database, we’ve already done the really hard work. \n    We’ve already modified the data in the database, so we’ve already done 99.9 percent of the work. \n    Operations such as the following have already taken place:\n    • Undo blocks have been generated in the SGA.\n    • Modified data blocks have been generated in the SGA.\n    • Buffered redo for the preceding two items has been generated in the SGA.\n    • Depending on the size of the preceding three items, and the amount of time spent,some combination of the previous data may be flushed onto disk already.\n    • All locks have been acquired.\n在執行COMMIT前，其實DB已經把真正困難的工作都完成了，幾乎99.9%都已經完成...\n• Undo區塊已在SGA產生好。\n• 修改後的資料區塊已在SGA產生好。\n• 前兩項的Buffered redo已在SGA產生好。\n• 依據資料量的大小及時間而定，前三項的資料有部分也已經寫入Disk。\n• 取得所有需要的locks。\n\n---\t\n    When we COMMIT, all that is left to happen is the following:\n    • An SCN is generated for our transaction.\n      (SCN is a simple timing mechanism Oracle uses to guarantee the ordering of transactions and to enable recovery from failure.\n       It is also used to guarantee read-consistency and checkpointing in the database.\n       Think of the SCN as a ticker; every time someone COMMITs, the SCN is incremented by one.)\n    • LGWR writes all of our remaining buffered redo log entries to disk and records the SCN in the online redo log files as well.\n      This step is actually the COMMIT. If this step occurs, we have committed.\n      Our transaction entry is “removed” from V$TRANSACTION—this shows that we have committed.\n    • All locks recorded in V$LOCK held by our session are released,\n      and everyone who was enqueued waiting on locks we held will be woken up and allowed to proceed with their work.\n    • Some of the blocks our transaction modified will be visited and “cleaned out” in a fast mode if they are still in the buffer cache.\n      (Block cleanout refers to the lock-related information we store in the database block header.\n       Basically, we are cleaning out our transaction information on the block, so the next person who visits the block won’t have to.)\n在COMMIT之後剩餘所需執行的工作如下:\n• 產生交易的SCN(System Change Number)。\n• LGWR將所有剩餘的Buffered redo全部寫入Disk，並且在online redo log上記錄SCN。\n• 釋放本交易相關的locks，所有正在等待我們的lock的工作都會被喚醒並執行。\n• 原本交易所使用的區塊會被快速釋放或重新被其他的交易使用。\n\n---\n    以上資料參考自: Thomas.Kyte - Expert Oracle Database Architecture\n","source":"_posts/Redo-Undo-Commit.md","raw":"---\ntitle: Redo-Undo-Commit\ndate: 2016-11-01 17:59:04\ntags: DB\n---\n\nRedo\n---\n    Redo log files are the transaction logs for the database.\n\tOracle maintains two types of redo log files: online and archived.\n\tThey are used for recovery purposes.\nRedo log就是DB的交易記錄，最主要是的用途是復原資料。\n\n{% asset_img redolog.png %}\n\n---\n    Every Oracle database has at least two online redo log groups with at least a single member(redo log file) in each group.\n\tThese online redo log groups are used in a circular fashion.\n每個Oracle DB 至少會有2個online的redo log組成redo log groups(每個redo log至少會有一個member)，並以循環的方使用。\n\n{% asset_img RedoLogMembers.png %}\n\n---\n\nUndo\n---\n    Undo information is generated by the database as you make modifications to data to put it back the way it was before the modifications,\n\tin the event the transaction or statement you are executing fails for any reason or if you request it with a ROLLBACK statement.\nUndo是將資料回復到修改之前的狀態，通常因為某些原因或交易失敗而執行ROLLBACK。\n\n---\n    The database is logically restored to the way it was, any changes are logically undone,\n\tthe database blocks themselves, may well be different after a rollback.\nRollback是邏輯上將資料回復到原本的狀態，在Rollback以後實際資料存放的區塊與原本完全不同。\n\t\n---\n\nCommit\n---\n    A COMMIT is generally a very fast operation, regardless of the transaction size.\nCOMMIT通常是一個很快的動作，與交易的大小無關。\n\n---\n    If a COMMIT of one row takes X units of time, and the COMMIT of 1,000 rows takes the same X units of time.\nCOMMIT一筆資料列跟commit一千筆資料列同樣都是花費X的單位時間。\n\n---\n    By committing only when you have to(when the logical unit of work is complete),\n    you will not only increase performance,\tbut also reduce contention for shared resources\n\t(log files, various internal latches...).\n有需要時才COMMIT(商業邏輯完成時)，如此非但可以增加效能，更可以減少共用資源的使用。\n\n---\n    It is best to size our transactions based on business need,\n\tnot based on misguided attempts to lessen resource usage on the database.\n依據商業邏輯的需求去控制交易的大小，而非基於減少DB資源的誤導嘗試。\n\n---\t\n    There are two contributing factors to the expense of the COMMIT:\n    • We’ve obviously increased the round-trips to and from the database. \n      If we commit every record, we are generating that much more traffic back and forth.\n    • Every time we commit, we must wait for our redo to be written to disk. This will result in a “wait.” \n      In this case, the wait is named “log file sync”.\nCOMMIT對系統的兩個主要花費如下:\n• 數據的往返，多次的Commit會增加更多的流量來回\n• 每當我們COMMIT就必須等待RedoLog寫入Disk。這個等待叫作“log file sync.”\n\n---\n    When we committed after every INSERT, we waited almost every time—and if you wait a little bit of time but you wait often, then it all adds up.\n每次COMMIT一筆INSERT都要等待一點時間，所以如果我們Commit很多次，結果會是這些時間的加總。\n\n---\n    Before we even go to COMMIT in the database, we’ve already done the really hard work. \n    We’ve already modified the data in the database, so we’ve already done 99.9 percent of the work. \n    Operations such as the following have already taken place:\n    • Undo blocks have been generated in the SGA.\n    • Modified data blocks have been generated in the SGA.\n    • Buffered redo for the preceding two items has been generated in the SGA.\n    • Depending on the size of the preceding three items, and the amount of time spent,some combination of the previous data may be flushed onto disk already.\n    • All locks have been acquired.\n在執行COMMIT前，其實DB已經把真正困難的工作都完成了，幾乎99.9%都已經完成...\n• Undo區塊已在SGA產生好。\n• 修改後的資料區塊已在SGA產生好。\n• 前兩項的Buffered redo已在SGA產生好。\n• 依據資料量的大小及時間而定，前三項的資料有部分也已經寫入Disk。\n• 取得所有需要的locks。\n\n---\t\n    When we COMMIT, all that is left to happen is the following:\n    • An SCN is generated for our transaction.\n      (SCN is a simple timing mechanism Oracle uses to guarantee the ordering of transactions and to enable recovery from failure.\n       It is also used to guarantee read-consistency and checkpointing in the database.\n       Think of the SCN as a ticker; every time someone COMMITs, the SCN is incremented by one.)\n    • LGWR writes all of our remaining buffered redo log entries to disk and records the SCN in the online redo log files as well.\n      This step is actually the COMMIT. If this step occurs, we have committed.\n      Our transaction entry is “removed” from V$TRANSACTION—this shows that we have committed.\n    • All locks recorded in V$LOCK held by our session are released,\n      and everyone who was enqueued waiting on locks we held will be woken up and allowed to proceed with their work.\n    • Some of the blocks our transaction modified will be visited and “cleaned out” in a fast mode if they are still in the buffer cache.\n      (Block cleanout refers to the lock-related information we store in the database block header.\n       Basically, we are cleaning out our transaction information on the block, so the next person who visits the block won’t have to.)\n在COMMIT之後剩餘所需執行的工作如下:\n• 產生交易的SCN(System Change Number)。\n• LGWR將所有剩餘的Buffered redo全部寫入Disk，並且在online redo log上記錄SCN。\n• 釋放本交易相關的locks，所有正在等待我們的lock的工作都會被喚醒並執行。\n• 原本交易所使用的區塊會被快速釋放或重新被其他的交易使用。\n\n---\n    以上資料參考自: Thomas.Kyte - Expert Oracle Database Architecture\n","slug":"Redo-Undo-Commit","published":1,"updated":"2017-04-11T09:16:52.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut6d000kw4v60bzr22qt","content":"<h2 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h2><pre><code>Redo log files are the transaction logs for the database.\nOracle maintains two types of redo log files: online and archived.\nThey are used for recovery purposes.\n</code></pre><p>Redo log就是DB的交易記錄，最主要是的用途是復原資料。</p>\n<img src=\"/2016/11/01/Redo-Undo-Commit/redolog.png\" alt=\"redolog.png\" title=\"\">\n<hr>\n<pre><code>Every Oracle database has at least two online redo log groups with at least a single member(redo log file) in each group.\nThese online redo log groups are used in a circular fashion.\n</code></pre><p>每個Oracle DB 至少會有2個online的redo log組成redo log groups(每個redo log至少會有一個member)，並以循環的方使用。</p>\n<img src=\"/2016/11/01/Redo-Undo-Commit/RedoLogMembers.png\" alt=\"RedoLogMembers.png\" title=\"\">\n<hr>\n<h2 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h2><pre><code>Undo information is generated by the database as you make modifications to data to put it back the way it was before the modifications,\nin the event the transaction or statement you are executing fails for any reason or if you request it with a ROLLBACK statement.\n</code></pre><p>Undo是將資料回復到修改之前的狀態，通常因為某些原因或交易失敗而執行ROLLBACK。</p>\n<hr>\n<pre><code>The database is logically restored to the way it was, any changes are logically undone,\nthe database blocks themselves, may well be different after a rollback.\n</code></pre><p>Rollback是邏輯上將資料回復到原本的狀態，在Rollback以後實際資料存放的區塊與原本完全不同。</p>\n<hr>\n<h2 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h2><pre><code>A COMMIT is generally a very fast operation, regardless of the transaction size.\n</code></pre><p>COMMIT通常是一個很快的動作，與交易的大小無關。</p>\n<hr>\n<pre><code>If a COMMIT of one row takes X units of time, and the COMMIT of 1,000 rows takes the same X units of time.\n</code></pre><p>COMMIT一筆資料列跟commit一千筆資料列同樣都是花費X的單位時間。</p>\n<hr>\n<pre><code>By committing only when you have to(when the logical unit of work is complete),\nyou will not only increase performance,    but also reduce contention for shared resources\n(log files, various internal latches...).\n</code></pre><p>有需要時才COMMIT(商業邏輯完成時)，如此非但可以增加效能，更可以減少共用資源的使用。</p>\n<hr>\n<pre><code>It is best to size our transactions based on business need,\nnot based on misguided attempts to lessen resource usage on the database.\n</code></pre><p>依據商業邏輯的需求去控制交易的大小，而非基於減少DB資源的誤導嘗試。</p>\n<hr>\n<pre><code>There are two contributing factors to the expense of the COMMIT:\n• We’ve obviously increased the round-trips to and from the database. \n  If we commit every record, we are generating that much more traffic back and forth.\n• Every time we commit, we must wait for our redo to be written to disk. This will result in a “wait.” \n  In this case, the wait is named “log file sync”.\n</code></pre><p>COMMIT對系統的兩個主要花費如下:<br>• 數據的往返，多次的Commit會增加更多的流量來回<br>• 每當我們COMMIT就必須等待RedoLog寫入Disk。這個等待叫作“log file sync.”</p>\n<hr>\n<pre><code>When we committed after every INSERT, we waited almost every time—and if you wait a little bit of time but you wait often, then it all adds up.\n</code></pre><p>每次COMMIT一筆INSERT都要等待一點時間，所以如果我們Commit很多次，結果會是這些時間的加總。</p>\n<hr>\n<pre><code>Before we even go to COMMIT in the database, we’ve already done the really hard work. \nWe’ve already modified the data in the database, so we’ve already done 99.9 percent of the work. \nOperations such as the following have already taken place:\n• Undo blocks have been generated in the SGA.\n• Modified data blocks have been generated in the SGA.\n• Buffered redo for the preceding two items has been generated in the SGA.\n• Depending on the size of the preceding three items, and the amount of time spent,some combination of the previous data may be flushed onto disk already.\n• All locks have been acquired.\n</code></pre><p>在執行COMMIT前，其實DB已經把真正困難的工作都完成了，幾乎99.9%都已經完成…<br>• Undo區塊已在SGA產生好。<br>• 修改後的資料區塊已在SGA產生好。<br>• 前兩項的Buffered redo已在SGA產生好。<br>• 依據資料量的大小及時間而定，前三項的資料有部分也已經寫入Disk。<br>• 取得所有需要的locks。</p>\n<hr>\n<pre><code>When we COMMIT, all that is left to happen is the following:\n• An SCN is generated for our transaction.\n  (SCN is a simple timing mechanism Oracle uses to guarantee the ordering of transactions and to enable recovery from failure.\n   It is also used to guarantee read-consistency and checkpointing in the database.\n   Think of the SCN as a ticker; every time someone COMMITs, the SCN is incremented by one.)\n• LGWR writes all of our remaining buffered redo log entries to disk and records the SCN in the online redo log files as well.\n  This step is actually the COMMIT. If this step occurs, we have committed.\n  Our transaction entry is “removed” from V$TRANSACTION—this shows that we have committed.\n• All locks recorded in V$LOCK held by our session are released,\n  and everyone who was enqueued waiting on locks we held will be woken up and allowed to proceed with their work.\n• Some of the blocks our transaction modified will be visited and “cleaned out” in a fast mode if they are still in the buffer cache.\n  (Block cleanout refers to the lock-related information we store in the database block header.\n   Basically, we are cleaning out our transaction information on the block, so the next person who visits the block won’t have to.)\n</code></pre><p>在COMMIT之後剩餘所需執行的工作如下:<br>• 產生交易的SCN(System Change Number)。<br>• LGWR將所有剩餘的Buffered redo全部寫入Disk，並且在online redo log上記錄SCN。<br>• 釋放本交易相關的locks，所有正在等待我們的lock的工作都會被喚醒並執行。<br>• 原本交易所使用的區塊會被快速釋放或重新被其他的交易使用。</p>\n<hr>\n<pre><code>以上資料參考自: Thomas.Kyte - Expert Oracle Database Architecture\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h2><pre><code>Redo log files are the transaction logs for the database.\nOracle maintains two types of redo log files: online and archived.\nThey are used for recovery purposes.\n</code></pre><p>Redo log就是DB的交易記錄，最主要是的用途是復原資料。</p>\n<img src=\"/2016/11/01/Redo-Undo-Commit/redolog.png\" alt=\"redolog.png\" title=\"\">\n<hr>\n<pre><code>Every Oracle database has at least two online redo log groups with at least a single member(redo log file) in each group.\nThese online redo log groups are used in a circular fashion.\n</code></pre><p>每個Oracle DB 至少會有2個online的redo log組成redo log groups(每個redo log至少會有一個member)，並以循環的方使用。</p>\n<img src=\"/2016/11/01/Redo-Undo-Commit/RedoLogMembers.png\" alt=\"RedoLogMembers.png\" title=\"\">\n<hr>\n<h2 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h2><pre><code>Undo information is generated by the database as you make modifications to data to put it back the way it was before the modifications,\nin the event the transaction or statement you are executing fails for any reason or if you request it with a ROLLBACK statement.\n</code></pre><p>Undo是將資料回復到修改之前的狀態，通常因為某些原因或交易失敗而執行ROLLBACK。</p>\n<hr>\n<pre><code>The database is logically restored to the way it was, any changes are logically undone,\nthe database blocks themselves, may well be different after a rollback.\n</code></pre><p>Rollback是邏輯上將資料回復到原本的狀態，在Rollback以後實際資料存放的區塊與原本完全不同。</p>\n<hr>\n<h2 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h2><pre><code>A COMMIT is generally a very fast operation, regardless of the transaction size.\n</code></pre><p>COMMIT通常是一個很快的動作，與交易的大小無關。</p>\n<hr>\n<pre><code>If a COMMIT of one row takes X units of time, and the COMMIT of 1,000 rows takes the same X units of time.\n</code></pre><p>COMMIT一筆資料列跟commit一千筆資料列同樣都是花費X的單位時間。</p>\n<hr>\n<pre><code>By committing only when you have to(when the logical unit of work is complete),\nyou will not only increase performance,    but also reduce contention for shared resources\n(log files, various internal latches...).\n</code></pre><p>有需要時才COMMIT(商業邏輯完成時)，如此非但可以增加效能，更可以減少共用資源的使用。</p>\n<hr>\n<pre><code>It is best to size our transactions based on business need,\nnot based on misguided attempts to lessen resource usage on the database.\n</code></pre><p>依據商業邏輯的需求去控制交易的大小，而非基於減少DB資源的誤導嘗試。</p>\n<hr>\n<pre><code>There are two contributing factors to the expense of the COMMIT:\n• We’ve obviously increased the round-trips to and from the database. \n  If we commit every record, we are generating that much more traffic back and forth.\n• Every time we commit, we must wait for our redo to be written to disk. This will result in a “wait.” \n  In this case, the wait is named “log file sync”.\n</code></pre><p>COMMIT對系統的兩個主要花費如下:<br>• 數據的往返，多次的Commit會增加更多的流量來回<br>• 每當我們COMMIT就必須等待RedoLog寫入Disk。這個等待叫作“log file sync.”</p>\n<hr>\n<pre><code>When we committed after every INSERT, we waited almost every time—and if you wait a little bit of time but you wait often, then it all adds up.\n</code></pre><p>每次COMMIT一筆INSERT都要等待一點時間，所以如果我們Commit很多次，結果會是這些時間的加總。</p>\n<hr>\n<pre><code>Before we even go to COMMIT in the database, we’ve already done the really hard work. \nWe’ve already modified the data in the database, so we’ve already done 99.9 percent of the work. \nOperations such as the following have already taken place:\n• Undo blocks have been generated in the SGA.\n• Modified data blocks have been generated in the SGA.\n• Buffered redo for the preceding two items has been generated in the SGA.\n• Depending on the size of the preceding three items, and the amount of time spent,some combination of the previous data may be flushed onto disk already.\n• All locks have been acquired.\n</code></pre><p>在執行COMMIT前，其實DB已經把真正困難的工作都完成了，幾乎99.9%都已經完成…<br>• Undo區塊已在SGA產生好。<br>• 修改後的資料區塊已在SGA產生好。<br>• 前兩項的Buffered redo已在SGA產生好。<br>• 依據資料量的大小及時間而定，前三項的資料有部分也已經寫入Disk。<br>• 取得所有需要的locks。</p>\n<hr>\n<pre><code>When we COMMIT, all that is left to happen is the following:\n• An SCN is generated for our transaction.\n  (SCN is a simple timing mechanism Oracle uses to guarantee the ordering of transactions and to enable recovery from failure.\n   It is also used to guarantee read-consistency and checkpointing in the database.\n   Think of the SCN as a ticker; every time someone COMMITs, the SCN is incremented by one.)\n• LGWR writes all of our remaining buffered redo log entries to disk and records the SCN in the online redo log files as well.\n  This step is actually the COMMIT. If this step occurs, we have committed.\n  Our transaction entry is “removed” from V$TRANSACTION—this shows that we have committed.\n• All locks recorded in V$LOCK held by our session are released,\n  and everyone who was enqueued waiting on locks we held will be woken up and allowed to proceed with their work.\n• Some of the blocks our transaction modified will be visited and “cleaned out” in a fast mode if they are still in the buffer cache.\n  (Block cleanout refers to the lock-related information we store in the database block header.\n   Basically, we are cleaning out our transaction information on the block, so the next person who visits the block won’t have to.)\n</code></pre><p>在COMMIT之後剩餘所需執行的工作如下:<br>• 產生交易的SCN(System Change Number)。<br>• LGWR將所有剩餘的Buffered redo全部寫入Disk，並且在online redo log上記錄SCN。<br>• 釋放本交易相關的locks，所有正在等待我們的lock的工作都會被喚醒並執行。<br>• 原本交易所使用的區塊會被快速釋放或重新被其他的交易使用。</p>\n<hr>\n<pre><code>以上資料參考自: Thomas.Kyte - Expert Oracle Database Architecture\n</code></pre>"},{"title":"SqlServer Code Snippets","date":"2016-10-27T09:18:17.000Z","_content":"\nSqlServer2012提供了\"Code Snippets\"的功能，讓我們可以把常用的Scripts存成範本，並且可以很方便的取出來使用。\n\n設定方式如下:\n\n點選 Tools -> Code Snippets Manager...\n{% asset_img manager.png %}\n\n點選 Add... 選取存放Scripts的資料夾(ex.LDR_Snippets):\n{% asset_img addchoose.png %}\n\n使用時在Query視窗按滑鼠右鍵點選Insert Snippet...(或使用快速鍵Ctrl+K,Ctrl+X):\n{% asset_img insert.png %}\n\n點選我們的資料夾(LDR_Snippets):\n{% asset_img insert2.png %}\n\n點選要使用的Scripts即會帶出範本內容:\n{% asset_img using.png %}\n\n---\n\nScripts範本副檔名是.snippet，\n如下圖，需要編輯的部分主要為:Title,Description,Author\n,Declarations(自訂變數),Code:\n{% asset_img snippetFile.png %}\n\n使用自訂變數游標會將變數反白，效果如下圖:\n{% asset_img sample.png %}","source":"_posts/SqlServer-Code-Snippets.md","raw":"---\ntitle: SqlServer Code Snippets\ndate: 2016-10-27 17:18:17\ntags: DB\n---\n\nSqlServer2012提供了\"Code Snippets\"的功能，讓我們可以把常用的Scripts存成範本，並且可以很方便的取出來使用。\n\n設定方式如下:\n\n點選 Tools -> Code Snippets Manager...\n{% asset_img manager.png %}\n\n點選 Add... 選取存放Scripts的資料夾(ex.LDR_Snippets):\n{% asset_img addchoose.png %}\n\n使用時在Query視窗按滑鼠右鍵點選Insert Snippet...(或使用快速鍵Ctrl+K,Ctrl+X):\n{% asset_img insert.png %}\n\n點選我們的資料夾(LDR_Snippets):\n{% asset_img insert2.png %}\n\n點選要使用的Scripts即會帶出範本內容:\n{% asset_img using.png %}\n\n---\n\nScripts範本副檔名是.snippet，\n如下圖，需要編輯的部分主要為:Title,Description,Author\n,Declarations(自訂變數),Code:\n{% asset_img snippetFile.png %}\n\n使用自訂變數游標會將變數反白，效果如下圖:\n{% asset_img sample.png %}","slug":"SqlServer-Code-Snippets","published":1,"updated":"2017-04-11T09:16:52.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut6h000lw4v65u1c8xl5","content":"<p>SqlServer2012提供了”Code Snippets”的功能，讓我們可以把常用的Scripts存成範本，並且可以很方便的取出來使用。</p>\n<p>設定方式如下:</p>\n<p>點選 Tools -&gt; Code Snippets Manager…<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/manager.png\" alt=\"manager.png\" title=\"\"></p>\n<p>點選 Add… 選取存放Scripts的資料夾(ex.LDR_Snippets):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/addchoose.png\" alt=\"addchoose.png\" title=\"\"></p>\n<p>使用時在Query視窗按滑鼠右鍵點選Insert Snippet…(或使用快速鍵Ctrl+K,Ctrl+X):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/insert.png\" alt=\"insert.png\" title=\"\"></p>\n<p>點選我們的資料夾(LDR_Snippets):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/insert2.png\" alt=\"insert2.png\" title=\"\"></p>\n<p>點選要使用的Scripts即會帶出範本內容:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/using.png\" alt=\"using.png\" title=\"\"></p>\n<hr>\n<p>Scripts範本副檔名是.snippet，<br>如下圖，需要編輯的部分主要為:Title,Description,Author<br>,Declarations(自訂變數),Code:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/snippetFile.png\" alt=\"snippetFile.png\" title=\"\"></p>\n<p>使用自訂變數游標會將變數反白，效果如下圖:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/sample.png\" alt=\"sample.png\" title=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>SqlServer2012提供了”Code Snippets”的功能，讓我們可以把常用的Scripts存成範本，並且可以很方便的取出來使用。</p>\n<p>設定方式如下:</p>\n<p>點選 Tools -&gt; Code Snippets Manager…<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/manager.png\" alt=\"manager.png\" title=\"\"></p>\n<p>點選 Add… 選取存放Scripts的資料夾(ex.LDR_Snippets):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/addchoose.png\" alt=\"addchoose.png\" title=\"\"></p>\n<p>使用時在Query視窗按滑鼠右鍵點選Insert Snippet…(或使用快速鍵Ctrl+K,Ctrl+X):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/insert.png\" alt=\"insert.png\" title=\"\"></p>\n<p>點選我們的資料夾(LDR_Snippets):<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/insert2.png\" alt=\"insert2.png\" title=\"\"></p>\n<p>點選要使用的Scripts即會帶出範本內容:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/using.png\" alt=\"using.png\" title=\"\"></p>\n<hr>\n<p>Scripts範本副檔名是.snippet，<br>如下圖，需要編輯的部分主要為:Title,Description,Author<br>,Declarations(自訂變數),Code:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/snippetFile.png\" alt=\"snippetFile.png\" title=\"\"></p>\n<p>使用自訂變數游標會將變數反白，效果如下圖:<br><img src=\"/2016/10/27/SqlServer-Code-Snippets/sample.png\" alt=\"sample.png\" title=\"\"></p>\n"},{"title":"軟體研發之道-作者推薦的歷史人物","date":"2017-03-15T09:22:01.000Z","_content":"\n    佛洛伊德(Sigmund Freud):思想家\n\t-> 拓展思維\n\t\n    達爾文(Charles Robert Darwin):自然探索者\n\t-> 萬物真理\n\t\n    理查德道金斯(Richard Dawkins) [自私的基因(The Selfish Gene)]\n    -> 思索進化\n\t\n\t莎士比亞(William Shakespeare):作家 [仲夏夜之夢]\n\t-> 理解象徵\n    \n\t林肯(Abraham Lincoln):第16任美國總統\n\t格蘭特(Ulysses S. Grant):第18任美國總統\n\t邱吉爾(Sir Winston Leonard Spencer-Churchill):英國首相\n\t-> 領導技能\n    \n\t魯道夫阿·思海姆(Rudolf Arnheim) [藝術與視覺(Art and Visual Perception)]\n\t-> 介面設計的藝術\n    \n\t威爾(Will)&艾麗爾·杜蘭特(Ariel Durant):歷史家 [文明的故事(The Story of Civilization)]\n\t-> 文明的變遷\n\n---\n以上節錄自: 軟體研發之道(Dynamics of Software Development)\n\n原著:\nJim McCarthy(先後任職於AT&T貝爾實驗室、白水公司及微軟Visual C++事業部)\nMichele McCarthy(曾任微軟供應鏈計劃經理)\n\n譯者: 趙俐 & 石華耀","source":"_posts/軟體研發之道-作者推薦的歷史人物.md","raw":"---\ntitle: 軟體研發之道-作者推薦的歷史人物\ndate: 2017-03-15 17:22:01\ntags:\n---\n\n    佛洛伊德(Sigmund Freud):思想家\n\t-> 拓展思維\n\t\n    達爾文(Charles Robert Darwin):自然探索者\n\t-> 萬物真理\n\t\n    理查德道金斯(Richard Dawkins) [自私的基因(The Selfish Gene)]\n    -> 思索進化\n\t\n\t莎士比亞(William Shakespeare):作家 [仲夏夜之夢]\n\t-> 理解象徵\n    \n\t林肯(Abraham Lincoln):第16任美國總統\n\t格蘭特(Ulysses S. Grant):第18任美國總統\n\t邱吉爾(Sir Winston Leonard Spencer-Churchill):英國首相\n\t-> 領導技能\n    \n\t魯道夫阿·思海姆(Rudolf Arnheim) [藝術與視覺(Art and Visual Perception)]\n\t-> 介面設計的藝術\n    \n\t威爾(Will)&艾麗爾·杜蘭特(Ariel Durant):歷史家 [文明的故事(The Story of Civilization)]\n\t-> 文明的變遷\n\n---\n以上節錄自: 軟體研發之道(Dynamics of Software Development)\n\n原著:\nJim McCarthy(先後任職於AT&T貝爾實驗室、白水公司及微軟Visual C++事業部)\nMichele McCarthy(曾任微軟供應鏈計劃經理)\n\n譯者: 趙俐 & 石華耀","slug":"軟體研發之道-作者推薦的歷史人物","published":1,"updated":"2017-04-11T09:16:52.120Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9e0ut76000ow4v6ydhvas43","content":"<pre><code>佛洛伊德(Sigmund Freud):思想家\n-&gt; 拓展思維\n\n達爾文(Charles Robert Darwin):自然探索者\n-&gt; 萬物真理\n\n理查德道金斯(Richard Dawkins) [自私的基因(The Selfish Gene)]\n-&gt; 思索進化\n\n莎士比亞(William Shakespeare):作家 [仲夏夜之夢]\n-&gt; 理解象徵\n\n林肯(Abraham Lincoln):第16任美國總統\n格蘭特(Ulysses S. Grant):第18任美國總統\n邱吉爾(Sir Winston Leonard Spencer-Churchill):英國首相\n-&gt; 領導技能\n\n魯道夫阿·思海姆(Rudolf Arnheim) [藝術與視覺(Art and Visual Perception)]\n-&gt; 介面設計的藝術\n\n威爾(Will)&amp;艾麗爾·杜蘭特(Ariel Durant):歷史家 [文明的故事(The Story of Civilization)]\n-&gt; 文明的變遷\n</code></pre><hr>\n<p>以上節錄自: 軟體研發之道(Dynamics of Software Development)</p>\n<p>原著:<br>Jim McCarthy(先後任職於AT&amp;T貝爾實驗室、白水公司及微軟Visual C++事業部)<br>Michele McCarthy(曾任微軟供應鏈計劃經理)</p>\n<p>譯者: 趙俐 &amp; 石華耀</p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>佛洛伊德(Sigmund Freud):思想家\n-&gt; 拓展思維\n\n達爾文(Charles Robert Darwin):自然探索者\n-&gt; 萬物真理\n\n理查德道金斯(Richard Dawkins) [自私的基因(The Selfish Gene)]\n-&gt; 思索進化\n\n莎士比亞(William Shakespeare):作家 [仲夏夜之夢]\n-&gt; 理解象徵\n\n林肯(Abraham Lincoln):第16任美國總統\n格蘭特(Ulysses S. Grant):第18任美國總統\n邱吉爾(Sir Winston Leonard Spencer-Churchill):英國首相\n-&gt; 領導技能\n\n魯道夫阿·思海姆(Rudolf Arnheim) [藝術與視覺(Art and Visual Perception)]\n-&gt; 介面設計的藝術\n\n威爾(Will)&amp;艾麗爾·杜蘭特(Ariel Durant):歷史家 [文明的故事(The Story of Civilization)]\n-&gt; 文明的變遷\n</code></pre><hr>\n<p>以上節錄自: 軟體研發之道(Dynamics of Software Development)</p>\n<p>原著:<br>Jim McCarthy(先後任職於AT&amp;T貝爾實驗室、白水公司及微軟Visual C++事業部)<br>Michele McCarthy(曾任微軟供應鏈計劃經理)</p>\n<p>譯者: 趙俐 &amp; 石華耀</p>\n"}],"PostAsset":[{"_id":"source/_posts/Execution-Plan-and-Performance-Tunning/3JoinTypes.png","slug":"3JoinTypes.png","post":"cj9e0ut5w0006w4v6un9tab39","modified":0,"renderable":0},{"_id":"source/_posts/OracleServerArchitecture/OracleServerArchitecture.png","slug":"OracleServerArchitecture.png","post":"cj9e0ut63000cw4v6xn0rtxuw","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-Command-On-Linux/startupDB.png","slug":"startupDB.png","post":"cj9e0ut65000ew4v67ba5pdjq","modified":0,"renderable":0},{"_id":"source/_posts/Redo-Undo-Commit/RedoLogMembers.png","slug":"RedoLogMembers.png","post":"cj9e0ut6d000kw4v60bzr22qt","modified":0,"renderable":0},{"_id":"source/_posts/Redo-Undo-Commit/redolog.png","slug":"redolog.png","post":"cj9e0ut6d000kw4v60bzr22qt","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024105747.png","slug":"20171024105747.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024113042.png","slug":"20171024113042.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024113755.png","slug":"20171024113755.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024114105.png","slug":"20171024114105.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024114539.png","slug":"20171024114539.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/Middleman安裝/20171024120320.png","slug":"20171024120320.png","post":"cj9e0ut5y0007w4v60tx53jqo","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/addchoose.png","slug":"addchoose.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/insert.png","slug":"insert.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/insert2.png","slug":"insert2.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/manager.png","slug":"manager.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/sample.png","slug":"sample.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/snippetFile.png","slug":"snippetFile.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/SqlServer-Code-Snippets/using.png","slug":"using.png","post":"cj9e0ut6h000lw4v65u1c8xl5","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/Image-ssh.png","slug":"Image-ssh.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/Image-hashicorp.png","slug":"Image-hashicorp.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/Image-VMD.png","slug":"Image-VMD.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/Image-VMinstall.png","slug":"Image-VMinstall.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/Image-VagrantCmd.png","slug":"Image-VagrantCmd.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0},{"_id":"source/_posts/Vagrant/VMversion.png","slug":"VMversion.png","post":"cj9e0ut67000gw4v6on8vzuhe","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cj9e0ut5w0006w4v6un9tab39","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut600009w4v64mz1i3f7"},{"post_id":"cj9e0ut5g0002w4v6z6xmmiqx","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut63000bw4v6jlspbkzk"},{"post_id":"cj9e0ut60000aw4v6x2ufnaff","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut64000dw4v6iz040eo4"},{"post_id":"cj9e0ut5u0005w4v6qqyxqelz","tag_id":"cj9e0ut5z0008w4v6k9yotj3p","_id":"cj9e0ut67000fw4v6kvponfxa"},{"post_id":"cj9e0ut63000cw4v6xn0rtxuw","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut69000hw4v6j2v9sh7t"},{"post_id":"cj9e0ut65000ew4v67ba5pdjq","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut6d000jw4v6wizakhcc"},{"post_id":"cj9e0ut6d000kw4v60bzr22qt","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut6m000mw4v6ojjiy5ub"},{"post_id":"cj9e0ut6h000lw4v65u1c8xl5","tag_id":"cj9e0ut5n0004w4v60jaej3r2","_id":"cj9e0ut6m000nw4v6nvafmf0v"}],"Tag":[{"name":"DB","_id":"cj9e0ut5n0004w4v60jaej3r2"},{"name":"Hexo","_id":"cj9e0ut5z0008w4v6k9yotj3p"}]}}